<?xml version="1.0" encoding="iso-8859-1"?><xmi:XMI xmi:version="2.1" 
            xmlns:uml="http://schema.omg.org/spec/UML/2.1.2"
            xmlns:xmi="http://schema.omg.org/spec/XMI/2.1"
            xmlns:php="http://schemas/phpdoc/PHP_UML_2647">
                <xmi:Documentation exporter="PEAR\PHP_UML"/><uml:Model xmi:type="uml:Model" name="default"
            xmi:id="PHP_UML_0"  visibility="public" isAbstract="false" ><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_1" name="mixed"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2648" annotatedElement="PHP_UML_1"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_3" name="array"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2649" annotatedElement="PHP_UML_3"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_5" name="string"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2650" annotatedElement="PHP_UML_5"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_7" name="int"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2651" annotatedElement="PHP_UML_7"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_9" name="integer"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2652" annotatedElement="PHP_UML_9"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_11" name="bool"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2653" annotatedElement="PHP_UML_11"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_13" name="boolean"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2654" annotatedElement="PHP_UML_13"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_15" name="float"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2655" annotatedElement="PHP_UML_15"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_17" name="void"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2656" annotatedElement="PHP_UML_17"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_19" name="null"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2657" annotatedElement="PHP_UML_19"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_21" name="object"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2658" annotatedElement="PHP_UML_21"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:DataType" xmi:id="PHP_UML_23" name="resource"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2659" annotatedElement="PHP_UML_23"><body>Internal PHP type.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Interface"  name="Iterator" xmi:id="PHP_UML_25" visibility="package" isAbstract="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2660" annotatedElement="PHP_UML_25"><body>Internal PHP interface.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Interface"  name="Countable" xmi:id="PHP_UML_27" visibility="package" isAbstract="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2661" annotatedElement="PHP_UML_27"><body>Internal PHP interface.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="Exception" xmi:id="PHP_UML_29" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2662" annotatedElement="PHP_UML_29"><body>Internal PHP class.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="A_090827" xmi:id="PHP_UML_33" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="foo" xmi:id="PHP_UML_34" visibility="public" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2663" value="42" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_35" 
            name="getFooString" visibility="public" ><ownedParameter xmi:id="PHP_UML_36" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="B_090827" xmi:id="PHP_UML_37" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="foo" xmi:id="PHP_UML_42" visibility="private" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2665" value="&#039;{&#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_38" 
            name="getFooString1" visibility="public" ><ownedParameter xmi:id="PHP_UML_39" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_40" 
            name="getFooString2" visibility="public" ><ownedParameter xmi:id="PHP_UML_41" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_43" 
            name="getFooString3" visibility="public" ><ownedParameter xmi:id="PHP_UML_44" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="bug_772441" xmi:id="PHP_UML_489" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="_options" xmi:id="PHP_UML_490" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2669" value="array(&#039;packagefile&#039;=&gt;&#039;package.xml&#039;,&#039;doctype&#039;=&gt;&#039;http://pear.php.net/dtd/package-1.0&#039;,&#039;filelistgenerator&#039;=&gt;&#039;file&#039;,&#039;license&#039;=&gt;&#039;PHP License&#039;,&#039;roles&#039;=&gt;array(&#039;php&#039;=&gt;&#039;php&#039;,&#039;html&#039;=&gt;&#039;doc&#039;,&#039;*&#039;=&gt;&#039;data&#039;,),&#039;dir_roles&#039;=&gt;array(&#039;docs&#039;=&gt;&#039;doc&#039;,&#039;examples&#039;=&gt;&#039;doc&#039;,&#039;tests&#039;=&gt;&#039;tests&#039;,),&#039;exceptions&#039;=&gt;array(),&#039;installexceptions&#039;=&gt;array(),&#039;ignore&#039;=&gt;array(),&#039;deps&#039;=&gt;false,&#039;maintainers&#039;=&gt;false,&#039;notes&#039;=&gt;&#039;&#039;,&#039;changelognotes&#039;=&gt;false,&#039;outputdirectory&#039;=&gt;false,&#039;pathtopackagefile&#039;=&gt;false,&#039;lang&#039;=&gt;&#039;en&#039;,&#039;configure_options&#039;=&gt;array(),)" /></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="adodbExtract" xmi:id="PHP_UML_732" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_733" 
            name="IfNull" visibility="public" ><ownedParameter xmi:id="PHP_UML_734" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_735" name="field" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_736" name="ifNull" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_737" 
            name="pg_insert_id" visibility="public" ><ownedParameter xmi:id="PHP_UML_739" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_740" name="tablename" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_741" name="fieldname" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2676" annotatedElement="PHP_UML_737"><body>That one was messing the parser...</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_742" 
            name="_insertid" visibility="public" ><ownedParameter xmi:id="PHP_UML_744" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_745" name="table" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_746" name="column" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2680" annotatedElement="PHP_UML_742"><body>and that one was not there</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="Universe" xmi:id="PHP_UML_1478" visibility="package"
            isAbstract="true"><ownedAttribute xmi:type="uml:Property" name="age" xmi:id="PHP_UML_1480" visibility="public" ><type xmi:idref="PHP_UML_15"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2681" value="13000000000" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1481" 
            name="expands" visibility="public"  isAbstract="true"><ownedParameter xmi:id="PHP_UML_1482" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2683" annotatedElement="PHP_UML_1478"><body>A class that does not belong to any namespace :
(except the &quot;global namespace&quot; of PHP)</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="A" xmi:id="PHP_UML_1608" visibility="package"
            isAbstract="true"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2684" general="PHP_UML_29"/> <ownedOperation xmi:id="PHP_UML_1609" 
            name="y" visibility="public"  isAbstract="true"><ownedParameter xmi:id="PHP_UML_1611" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2686" annotatedElement="PHP_UML_1609"><body>Commentaire pour y</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Interface"  name="B" xmi:id="PHP_UML_1612" visibility="package" isAbstract="true"><ownedOperation xmi:id="PHP_UML_1613" 
            name="x" visibility="public" ><ownedParameter xmi:id="PHP_UML_1615" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2688" annotatedElement="PHP_UML_1613"><body>Commentaire pour x</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="C" xmi:id="PHP_UML_1616" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2689" general="PHP_UML_1608"/> <ownedAttribute xmi:type="uml:Property" name="D" xmi:id="PHP_UML_1621" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2691" value="12" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="e" xmi:id="PHP_UML_1622" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_1617" 
            name="x" visibility="public" ><ownedParameter xmi:id="PHP_UML_1618" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1619" 
            name="y" visibility="public" ><ownedParameter xmi:id="PHP_UML_1620" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_2690" client="PHP_UML_1616" supplier="PHP_UML_1612" realizingClassifier="PHP_UML_1612"/><packagedElement xmi:type="uml:Interface"  name="O" xmi:id="PHP_UML_1684" visibility="package" isAbstract="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2695" annotatedElement="PHP_UML_1684"><body>Comment for interface O</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_46" name="PHP_UML"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_47" name="tests"><packagedElement xmi:type="uml:Class" name="bug_489398" xmi:id="PHP_UML_48" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="test_01" xmi:id="PHP_UML_50" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2696" value="&#039;$Id: bug-489398.php,v 1.1 2005/10/17 18:36:51 jeichorn Exp $&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2697" annotatedElement="PHP_UML_50"><body>Checking the single quote var case</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="test_02" xmi:id="PHP_UML_52" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2698" value="&quot;Double quoted value&quot;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2699" annotatedElement="PHP_UML_52"><body>checking the double quote var case</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="test_03" xmi:id="PHP_UML_54" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2700" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2701" annotatedElement="PHP_UML_54"><body>Checking the no quote cause</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="test_04" xmi:id="PHP_UML_56" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2702" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2703" annotatedElement="PHP_UML_56"><body>Checking the empty array case</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="test_05" xmi:id="PHP_UML_58" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2704" value="array(&quot;test1&quot;,&quot;test2&quot;=&gt;&quot;value&quot;)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2705" annotatedElement="PHP_UML_58"><body>Checking the array with data case</body></ownedComment></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="bug540341" xmi:id="PHP_UML_61" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_63" 
            name="get_header2" visibility="public" ><ownedParameter xmi:id="PHP_UML_64" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_65" name="atate" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="summary_form" xmi:id="PHP_UML_67" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="dp" xmi:id="PHP_UML_69" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_70" 
            name="get_header2" visibility="public" ><ownedParameter xmi:id="PHP_UML_72" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_73" name="atate" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_74" 
            name="blah" visibility="public" ><ownedParameter xmi:id="PHP_UML_75" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="ctest" xmi:id="PHP_UML_96" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="t1" xmi:id="PHP_UML_98" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="t2" xmi:id="PHP_UML_99" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="t3" xmi:id="PHP_UML_101" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_102" 
            name="ctest" visibility="public" ><ownedParameter xmi:id="PHP_UML_103" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_104" 
            name="atest" visibility="public" ><ownedParameter xmi:id="PHP_UML_106" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_107" 
            name="btest" visibility="public" ><ownedParameter xmi:id="PHP_UML_108" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="priv1" xmi:id="PHP_UML_109" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="priv" xmi:id="PHP_UML_111" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2718" general="PHP_UML_109"/> <ownedAttribute xmi:type="uml:Property" name="privvar" xmi:id="PHP_UML_113" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_114" 
            name="privfunction" visibility="public" ><ownedParameter xmi:id="PHP_UML_115" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="childofpriv" xmi:id="PHP_UML_116" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2721" general="PHP_UML_111"/> <ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2722" annotatedElement="PHP_UML_116"><body>what happens here?  testing bug 564135</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="testme" xmi:id="PHP_UML_127" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="me" xmi:id="PHP_UML_129" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2723" value="array(&#039;item1&#039;=&gt;2,&#039;item2&#039;=&gt;3)" /></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="metoo" xmi:id="PHP_UML_130" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="mine" xmi:id="PHP_UML_132" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2724" value="&#039;but this&#039;" /></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="brokenlinkstovars" xmi:id="PHP_UML_134" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="broken" xmi:id="PHP_UML_136" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_137" 
            name="brokenlinkstovars" visibility="public" ><ownedParameter xmi:id="PHP_UML_139" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="iConverter" xmi:id="PHP_UML_141" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_146" 
            name="walk" visibility="public" ><ownedParameter xmi:id="PHP_UML_147" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2728" annotatedElement="PHP_UML_141"><body>Base class for all output converters.
A Converter takes output from the {@link Parser} and converts it to template-friendly output.  A converter for the standard phpDocumentor template, {@link HTMLConverter}, is provided with this release.  Future releases will have support for other formats and templates, including DocBook, XML, and possibly other HTML templates.  The converter takes output directly from {@link NewRender} and using {@link walk()} it &quot;walks&quot; over an array of phpDocumentor elements, as represented by descendants of {@link parserElement} 
a converter must define the abstract function Convert (an example is {@link HTMLConverter::Convert()}), a function that takes a passed object and uses it to generate structures for an output template, or directly generates output.  Since all elements have their DocBlocks linked directly, this allows for more logical parsing than earlier versions of phpDocumentor.

A Converter is passed several data structures in its constructor, all of which are optional in output and may be handled in any way the converter would like.  These structures are arrays:
&lt;ul&gt; &lt;li&gt;array of methods by class (see {@link NewRender::$methods})&lt;/li&gt; &lt;li&gt;array of variables by class (see {@link NewRender::$vars})&lt;/li&gt; &lt;li&gt;array of links to documented elements (see {@link NewRender::$links})&lt;/li&gt; &lt;li&gt;array of class parents by name (see {@link NewRender::$classtree})&lt;/li&gt; &lt;li&gt;array of class packages by classname (see {@link NewRender::$classpackages})&lt;/li&gt; &lt;li&gt;array of packages to document (see {@link NewRender::$packageoutput})&lt;/li&gt; &lt;li&gt;array of extended classes by parent classname (see {@link NewRender::$class_children})&lt;/li&gt; &lt;li&gt;array of all documented elements by name (see {@link NewRender::$elements})&lt;/li&gt; &lt;li&gt;array of all documented elements by name, split by package (see {@link NewRender::$pkg_elements})&lt;/li&gt; &lt;li&gt;boolean option, set to true to parse all elements marked @access private (see {@link NewRender::$parsePrivate})&lt;/li&gt; &lt;li&gt;boolean option, set to true to stop informative output while parsing (good for cron jobs) (see {@link NewRender::$quietMode})&lt;/li&gt; &lt;/ul&gt;</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="iParser" xmi:id="PHP_UML_148" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="iHTMLConverter" xmi:id="PHP_UML_150" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2729" general="PHP_UML_141"/> <ownedOperation xmi:id="PHP_UML_151" 
            name="Convert" visibility="public" ><ownedParameter xmi:id="PHP_UML_152" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="iparserElement" xmi:id="PHP_UML_153" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="iNewRender" xmi:id="PHP_UML_155" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="methods" xmi:id="PHP_UML_157" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2731" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2732" annotatedElement="PHP_UML_157"><body>array of methods by package, subpackage and class format:
array(packagename =&gt; array(subpackagename =&gt; array(classname =&gt; array(methodname1 =&gt; {@link parserMethod} class, methodname2 =&gt; {@link parserMethod} class,...) ) ) ) )</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="vars" xmi:id="PHP_UML_161" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2733" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2734" annotatedElement="PHP_UML_161"><body>array of class variables by package, subpackage and class format:
array(packagename =&gt; array(subpackagename =&gt; array(classname =&gt; array(variablename1 =&gt; {@link parserMethod} class, variablename2 =&gt; {@link parserMethod} class,...) ) ) ) )</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="parsePrivate" xmi:id="PHP_UML_165" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2735" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2736" annotatedElement="PHP_UML_165"><body>set in {@link phpdoc.inc} to the value of the parserprivate commandline option.
If this option is true, elements with an @access private tag will be parsed and displayed</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="private_class" xmi:id="PHP_UML_168" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2737" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2738" annotatedElement="PHP_UML_168"><body>this variable is used to prevent parsing of private elements if $parsePrivate is false.
it is also used by the packageoutput setting to prevent parsing of elements that aren't in the desired output packages</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="links" xmi:id="PHP_UML_172" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2739" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2740" annotatedElement="PHP_UML_172"><body>the workhorse of linking.
This array is an array of link objects of format:
[package][subpackage][eltype][elname] = descendant of {@link abstractLink} eltype can be page|include|function|define|class|method|var if eltype is method or var, the array format is:
[package][subpackage][eltype][class][elname]</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classtree" xmi:id="PHP_UML_176" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2741" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2742" annotatedElement="PHP_UML_176"><body>a tree of class inheritance by name.
format:
array(childname =&gt; parentname, childname1 =&gt; parentname1, rootname =&gt; 0, ...
)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classpackages" xmi:id="PHP_UML_180" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2743" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2744" annotatedElement="PHP_UML_180"><body>used in {@link Converter::getClassPackage()} to inherit package from parent classes.
format:
array(classname =&gt; array(array(package,subpackage), array(package1,subpackage1),....
If a name conflict exists between two packages, automatic inheritance will not work, and the packages will need to be documented separately.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="targetDir" xmi:id="PHP_UML_183" visibility="public" ><type xmi:idref="PHP_UML_1"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2746" annotatedElement="PHP_UML_183"><body>used to set the output directory</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="class_children" xmi:id="PHP_UML_186" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2747" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2748" annotatedElement="PHP_UML_186"><body>An array of extended classes by package and parent class Format:
array(packagename =&gt; array(parentclass =&gt; array(childclassname1, childclassname2,...
) ) )</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="elements" xmi:id="PHP_UML_189" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2749" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="pkg_elements" xmi:id="PHP_UML_190" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2750" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="pages" xmi:id="PHP_UML_191" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2751" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="packageoutput" xmi:id="PHP_UML_192" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2752" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2753" annotatedElement="PHP_UML_192"><body>array of packages to parser and output documentation for, if not all packages should be documented Format:
array(package1,package2,...) or false if not set Use this option to limit output similar to ignoring files.  If you have some temporary files that you don't want to specify by name but don't want included in output, set a package name for all the elements in your project, and set packageoutput to that name.
the default package will be ignored.  Parsing speed does not improve.  If you want to ignore files for speed reasons, use the ignore command-line option</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="event_handlers" xmi:id="PHP_UML_196" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2754" value="array(&#039;docblock&#039;=&gt;&#039;handleDocBlock&#039;,&#039;page&#039;=&gt;&#039;handlePage&#039;,&#039;class&#039;=&gt;&#039;handleClass&#039;,&#039;define&#039;=&gt;&#039;handleDefine&#039;,&#039;function&#039;=&gt;&#039;handleFunction&#039;,&#039;method&#039;=&gt;&#039;handleMethod&#039;,&#039;var&#039;=&gt;&#039;handleVar&#039;,&#039;packagepage&#039;=&gt;&#039;handlePackagePage&#039;,&#039;include&#039;=&gt;&#039;handleInclude&#039;,)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2755" annotatedElement="PHP_UML_196"><body>the functions which handle output from the {@link Parser}</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="data" xmi:id="PHP_UML_199" visibility="public" ><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2757" annotatedElement="PHP_UML_199"><body>data contains parsed structures for the current page being parsed</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classpackage" xmi:id="PHP_UML_203" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2758" value="&#039;default&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2759" annotatedElement="PHP_UML_203"><body>set to the name of the package of the current class being parsed</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classsubpackage" xmi:id="PHP_UML_206" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2760" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2761" annotatedElement="PHP_UML_206"><body>set to the name of the subpackage of the current class being parsed</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="quietMode" xmi:id="PHP_UML_209" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2762" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2763" annotatedElement="PHP_UML_209"><body>set in {@link phpdoc.inc} to the value of the quitemode commandline option.
If this option is true, informative output while parsing will not be displayed (documentation is unaffected)</body></ownedComment></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="b553607_Parser" xmi:id="PHP_UML_213" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="iiparserBase" xmi:id="PHP_UML_217" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="type" xmi:id="PHP_UML_219" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2764" value="&#039;base&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2765" annotatedElement="PHP_UML_219"><body>always base</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="value" xmi:id="PHP_UML_222" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2766" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2767" annotatedElement="PHP_UML_222"><body>set to different things by its descendants</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_226" 
            name="getType" visibility="public" ><ownedParameter xmi:id="PHP_UML_228" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_229" 
            name="setValue" visibility="public" ><ownedParameter xmi:id="PHP_UML_231" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_232" name="value" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_233" 
            name="getValue" visibility="public" ><ownedParameter xmi:id="PHP_UML_235" name="return" direction="return"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="baby" xmi:id="PHP_UML_237" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2772" general="PHP_UML_240"/> <ownedAttribute xmi:type="uml:Property" name="oopsieindexing" xmi:id="PHP_UML_238" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="mama" xmi:id="PHP_UML_240" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="functionincomment" xmi:id="PHP_UML_243" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_245" 
            name="process" visibility="public" ><ownedParameter xmi:id="PHP_UML_246" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_247" name="trxtype" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_248" name="tender" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2776" value="&#039;C&#039;" /></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="few" xmi:id="PHP_UML_270" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="pfh" xmi:id="PHP_UML_272" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="bug557861" xmi:id="PHP_UML_274" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2778" annotatedElement="PHP_UML_274"><body>this page will not be shown in the package list and should be</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="multipl" xmi:id="PHP_UML_283" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="manyvars" xmi:id="PHP_UML_285" visibility="public" ><type xmi:idref="PHP_UML_5"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_288" 
            name="func" visibility="public" ><ownedParameter xmi:id="PHP_UML_291" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="testarraybug" xmi:id="PHP_UML_293" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="arrayType" xmi:id="PHP_UML_296" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2781" value="&#039;name should be arrayType&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="myarrayName" xmi:id="PHP_UML_297" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2782" value="&#039;name should be myarrayName&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="arrayType1" xmi:id="PHP_UML_298" visibility="public" ><type xmi:idref="PHP_UML_1"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2784" annotatedElement="PHP_UML_298"><body>test with no default, should be arrayType1</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="myarrayName1" xmi:id="PHP_UML_300" visibility="public" ><type xmi:idref="PHP_UML_1"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2786" annotatedElement="PHP_UML_300"><body>test with no default, should be myarrayName1</body></ownedComment></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2787" annotatedElement="PHP_UML_293"><body>tests variable names with the word 'array' in them</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="ClubBase" xmi:id="PHP_UML_320" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="_bDebugLevel" xmi:id="PHP_UML_321" visibility="public" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2788" value="-1" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2789" annotatedElement="PHP_UML_321"><body>$_bDebugLevel	Debug-Level 
Diese Variablen speichern die Debugging-Einstellungen innerhalb des Objekts.
Sie ueberschreiben ggf. die Werte in _ClubDebugOptions</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_bHideDebug" xmi:id="PHP_UML_327" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2790" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2791" annotatedElement="PHP_UML_327"><body>$__bHideDebug	Debugausgabe in HTMl-Kommentare setzen?</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_sLogFile" xmi:id="PHP_UML_332" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2792" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2793" annotatedElement="PHP_UML_332"><body>$_sLogFile	Logfile, in der Debugmeldungen geschrieben werden</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_bPrintDebug" xmi:id="PHP_UML_337" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2794" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2795" annotatedElement="PHP_UML_337"><body>$_bPrintDebug	Sollen Meldungen auch in HTM geschrieben werden, wenn sie in Datei geloggt werden?</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_bPrintFlush" xmi:id="PHP_UML_342" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2796" value="false" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_343" 
            name="ClubBase" visibility="public" ><ownedParameter xmi:id="PHP_UML_346" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2798" annotatedElement="PHP_UML_343"><body>ClubBase()    Der Konstruktor 
Macht nicht viel mehr, als fuer alle abgeleiteten Klassen eine Debug-Meldung abzusetzten und PEAR-Funktionen einzubinden</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_347" 
            name="getProperty" visibility="public" ><ownedParameter xmi:id="PHP_UML_354" name="return" direction="return"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_355" name="property" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_356" name="target" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2801" value="&#039;&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_357" name="index" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2802" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_358" name="simplify" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2803" value="false" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2804" annotatedElement="PHP_UML_347"><body>getProperty()	Gibt den Wert einer Eigenschaft zurueck 
Es werden nur 'oeffentliche' Eigenschaften (ohne '_' davor) zurueckgegeben/bearbeitet Wird ein optionales 'Target' angegeben wird versucht den Werte eines Hashes auszulesen (z.B. $class-&gt;$target[$property]) bzw. zu schreiben</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_359" 
            name="getAllProperties" visibility="public" ><ownedParameter xmi:id="PHP_UML_365" name="return" direction="return"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_366" name="simplify" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2806" value="false" /></ownedParameter><ownedParameter xmi:id="PHP_UML_367" name="exclude" direction="in"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2807" value="array()" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2808" annotatedElement="PHP_UML_359"><body>getAllProperties()	Gibt die Wert aller Eigenschaften einer Klasse zurueck 
Es werden nur 'oeffentliche' Eigenschaften (ohne '_' davor) zurueckgegeben/bearbeitet Wird ein optionales 'Target' angegeben wird versucht den Werte eines Hashes auszulesen (z.B. $class-&gt;$target[$property]) bzw. zu schreiben</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_368" 
            name="setProperty" visibility="public" ><ownedParameter xmi:id="PHP_UML_374" name="return" direction="return"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_375" name="property" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_376" name="value" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_377" name="target" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2812" value="&#039;&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_378" name="index" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2813" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_379" name="force" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2814" value="false" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2815" annotatedElement="PHP_UML_368"><body>setProperty()	Setzt den Wert einer Eigenschaft</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_380" 
            name="getPropType" visibility="public" ><ownedParameter xmi:id="PHP_UML_385" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_386" name="property" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_387" name="target" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2818" value="null" /></ownedParameter><ownedParameter xmi:id="PHP_UML_388" name="index" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2819" value="0" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2820" annotatedElement="PHP_UML_380"><body>getPropType	gibt den Datentyp eines Objekt-Eigenschaft zurueck.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_389" 
            name="setDebug" visibility="public" ><ownedParameter xmi:id="PHP_UML_400" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_401" name="level" direction="in"><type xmi:idref="PHP_UML_9"/></ownedParameter><ownedParameter xmi:id="PHP_UML_402" name="hide" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2823" value="true" /></ownedParameter><ownedParameter xmi:id="PHP_UML_403" name="file" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2824" value="&#039;&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_404" name="print" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2825" value="true" /></ownedParameter><ownedParameter xmi:id="PHP_UML_405" name="flush" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2826" value="false" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2827" annotatedElement="PHP_UML_389"><body>set_debug()   Debug-Level fuer die Klasse setzen 
Wird diese Methode statisch (ClubBase::set_debug()) aufgerufen, dann wird die globale Variable $_ClubDebugOptions gesetzt.
Diese gilt fuer ALLE KLASSEN, die keine eigenen Werte mit $obj-&gt;set_debug() gestzt haben.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_406" 
            name="printFlush" visibility="public" ><ownedParameter xmi:id="PHP_UML_407" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_408" 
            name="printVar" visibility="public" ><ownedParameter xmi:id="PHP_UML_409" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_410" name="var" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_411" name="info" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2831" value="&#039;&#039;" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_412" 
            name="loadClass" visibility="public" ><ownedParameter xmi:id="PHP_UML_413" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_414" name="classname" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_415" name="path" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2834" value="&#039;./&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_416" name="ext" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2835" value="&#039;.class.inc&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_417" name="require" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2836" value="false" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_418" 
            name="_PHPDOCUMENTOR_DEBUG" visibility="public" ><ownedParameter xmi:id="PHP_UML_427" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_428" name="message" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_429" name="level" direction="in"><type xmi:idref="PHP_UML_9"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2839" value="PHPDOCUMENTOR_DEBUG_INFO" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2840" annotatedElement="PHP_UML_418"><body>_PHPDOCUMENTOR_DEBUG()   Debugmeldungen ausgeben 
Mit dieser Funktion koennen alle Klassen einheitlich Debug-Meldungnen ausgeben.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_430" 
            name="_ERROR" visibility="public" ><ownedParameter xmi:id="PHP_UML_435" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_436" name="message" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2842" value="&#039;unknown error&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_437" name="code" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2843" value="PHPDOCUMENTOR_DEBUG_ERROR" /></ownedParameter><ownedParameter xmi:id="PHP_UML_438" name="mode" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2844" value="null" /></ownedParameter><ownedParameter xmi:id="PHP_UML_439" name="options" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2845" value="null" /></ownedParameter><ownedParameter xmi:id="PHP_UML_440" name="userinfo" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2846" value="null" /></ownedParameter><ownedParameter xmi:id="PHP_UML_441" name="error_class" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2847" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2848" annotatedElement="PHP_UML_430"><body>_ERROR()   Fehler registrieren und ggf. zur Debug-Ausgabe weiterleiten 
Dies muss erst noch implementiert werden ;-))</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="RecordWarning" xmi:id="PHP_UML_445" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="a" xmi:id="PHP_UML_448" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="a" xmi:id="PHP_UML_450" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="c" xmi:id="PHP_UML_453" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_451" 
            name="b" visibility="public" ><ownedParameter xmi:id="PHP_UML_452" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2852" annotatedElement="PHP_UML_448"><body>tests linking to methods and vars</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="parent_b587733" xmi:id="PHP_UML_474" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="v1" xmi:id="PHP_UML_477" visibility="public" ><type xmi:idref="PHP_UML_1"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2854" annotatedElement="PHP_UML_477"><body>displayed in inherited list?</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_480" 
            name="b1" visibility="public" ><ownedParameter xmi:id="PHP_UML_483" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2856" annotatedElement="PHP_UML_480"><body>displayed in inherited list?</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2857" annotatedElement="PHP_UML_474"><body>inherited functions with @access private should not be shown in inherited list of child</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="kiddie_b587733" xmi:id="PHP_UML_484" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2858" general="PHP_UML_474"/> <ownedOperation xmi:id="PHP_UML_486" 
            name="kiddie_b587733" visibility="public" ><ownedParameter xmi:id="PHP_UML_487" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="brute" xmi:id="PHP_UML_748" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_750" 
            name="test_escape" visibility="public" ><ownedParameter xmi:id="PHP_UML_751" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_752" 
            name="test_escape2" visibility="public" ><ownedParameter xmi:id="PHP_UML_753" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2862" annotatedElement="PHP_UML_748"><body>tests</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="testClass" xmi:id="PHP_UML_758" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_760" 
            name="testClass" visibility="public" ><ownedParameter xmi:id="PHP_UML_761" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="test" xmi:id="PHP_UML_765" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2864" annotatedElement="PHP_UML_765"><body>I'm a odd test case the @ sign is my friend</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="test2" xmi:id="PHP_UML_768" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2865" annotatedElement="PHP_UML_768"><body>tags demonstration, but this @version tag is ignored</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_NamedElement" xmi:id="PHP_UML_846" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2866" annotatedElement="PHP_UML_846"><body>PHP_UML (PHP/MOF program elements classes) 
This is a TEST sample, designed to by parsed by PHP_UML itself.
Do not use it.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Enumeration" xmi:id="PHP_UML_853" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="datatypes" xmi:id="PHP_UML_855" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2867" value="array(&#039;mixed&#039;,&#039;array&#039;,&#039;string&#039;,&#039;int&#039;,&#039;integer&#039;,&#039;bool&#039;,&#039;boolean&#039;,&#039;float&#039;,&#039;void&#039;,&#039;null&#039;,&#039;object&#039;,&#039;resource&#039;)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="filetype" xmi:id="PHP_UML_856" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2868" value="array(&#039;PHP File&#039;)" /></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2869" annotatedElement="PHP_UML_853"><body>Enumerates the basic PHP types.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_File" xmi:id="PHP_UML_857" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2870" general="PHP_UML_846"/> <ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2871" annotatedElement="PHP_UML_857"><body>A file object</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Sequence" xmi:id="PHP_UML_859" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="_objects" xmi:id="PHP_UML_861" visibility="private" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2872" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_key" xmi:id="PHP_UML_862" visibility="private" ><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2873" value="null" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_863" 
            name="add" visibility="public" ><ownedParameter xmi:id="PHP_UML_866" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_867" name="element" direction="inout"><type xmi:idref="PHP_UML_846"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2876" annotatedElement="PHP_UML_863"><body>Adds a program element to the sequence</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_868" 
            name="get" visibility="public" ><ownedParameter xmi:id="PHP_UML_872" name="return" direction="return"><type xmi:idref="PHP_UML_846"/></ownedParameter><ownedParameter xmi:id="PHP_UML_873" name="index" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2879" annotatedElement="PHP_UML_868"><body>Returns the object stored at the $index position</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_874" 
            name="getAll" visibility="public" ><ownedParameter xmi:id="PHP_UML_877" name="return" direction="return"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2881" annotatedElement="PHP_UML_874"><body>Returns all the objects stored</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_878" 
            name="searchElement" visibility="public" ><ownedParameter xmi:id="PHP_UML_883" name="return" direction="return"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_884" name="value" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_885" name="property" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2884" value="&#039;name&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2885" annotatedElement="PHP_UML_878"><body>Searches for an object</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_886" 
            name="current" visibility="public" ><ownedParameter xmi:id="PHP_UML_889" name="return" direction="return"><type xmi:idref="PHP_UML_846"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2887" annotatedElement="PHP_UML_886"><body>Returns a reference to the current element (head)</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_890" 
            name="key" visibility="public" ><ownedParameter xmi:id="PHP_UML_893" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2889" annotatedElement="PHP_UML_890"><body>Returns the current index position</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_894" 
            name="getIterator" visibility="public" ><ownedParameter xmi:id="PHP_UML_897" name="return" direction="return"><type xmi:idref="PHP_UML_898"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2891" annotatedElement="PHP_UML_894"><body>Returns an iterator containing all the objects stored</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2892" annotatedElement="PHP_UML_859"><body>A structure designed to store instances of PHP_UML metamodel's elements.
It is composed of a stack, an internal iterator ($_key), a search function and somes accessors.
It only accepts PHP_UML_Metamodel_Metamodel_NamedElement objects.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_SequenceIterator" xmi:id="PHP_UML_898" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="_key" xmi:id="PHP_UML_900" visibility="private" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2895" value="0" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_objects" xmi:id="PHP_UML_901" visibility="private" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2896" value="array()" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_902" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="PHP_UML_903" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_904" name="set" direction="inout"><type xmi:idref="PHP_UML_3"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_905" 
            name="current" visibility="public" ><ownedParameter xmi:id="PHP_UML_906" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_907" 
            name="key" visibility="public" ><ownedParameter xmi:id="PHP_UML_908" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_909" 
            name="next" visibility="public" ><ownedParameter xmi:id="PHP_UML_910" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_911" 
            name="valid" visibility="public" ><ownedParameter xmi:id="PHP_UML_912" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_913" 
            name="rewind" visibility="public" ><ownedParameter xmi:id="PHP_UML_914" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_915" 
            name="count" visibility="public" ><ownedParameter xmi:id="PHP_UML_916" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2905" annotatedElement="PHP_UML_898"><body>An external iterator for PHP_UML_Metamodel_Sequence PHP_UML_Metamodel_Sequence-&gt;getIterator() can get you one.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_2893" client="PHP_UML_898" supplier="PHP_UML_25" realizingClassifier="PHP_UML_25"/><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_2894" client="PHP_UML_898" supplier="PHP_UML_27" realizingClassifier="PHP_UML_27"/><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Superstructure" xmi:id="PHP_UML_917" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="packages" xmi:id="PHP_UML_919" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="interfaces" xmi:id="PHP_UML_920" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classes" xmi:id="PHP_UML_921" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="functions" xmi:id="PHP_UML_922" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="parameters" xmi:id="PHP_UML_923" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="datatypes" xmi:id="PHP_UML_924" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="files" xmi:id="PHP_UML_925" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_926" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="PHP_UML_927" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2914" annotatedElement="PHP_UML_917"><body>A superstructure to gather program elements.
Normally filled by PHP_UML_PHP_Parser, but you can also fill such an object &quot;by yourself&quot;, and pass it to the XMI factory for &quot;manual&quot; XMI generation</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Scanner" xmi:id="PHP_UML_929" visibility="package"
            isAbstract="true"><ownedAttribute xmi:type="uml:Property" name="ignoredDirectories" xmi:id="PHP_UML_930" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2915" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2916" annotatedElement="PHP_UML_930"><body>Directories to ignore during scan</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="subDirectories" xmi:id="PHP_UML_933" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2917" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2918" annotatedElement="PHP_UML_933"><body>Recursive search</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_936" 
            name="traverseDirectory" visibility="protected" ><ownedParameter xmi:id="PHP_UML_941" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_942" name="dir" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_943" name="level" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2921" value="1" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2922" annotatedElement="PHP_UML_936"><body>Traverse recursively the directories for files to parse</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML" xmi:id="PHP_UML_944" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_2923" general="PHP_UML_929"/> <ownedAttribute xmi:type="uml:Property" name="FILE" xmi:id="PHP_UML_946" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2924" value="1" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DIR_OPEN" xmi:id="PHP_UML_947" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2925" value="2" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DIR_CLOSE" xmi:id="PHP_UML_948" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2926" value="3" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="acceptedExtensions" xmi:id="PHP_UML_949" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2927" value="array(&#039;php&#039;)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2928" annotatedElement="PHP_UML_949"><body>Extensions of files to scan</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="tagFilename" xmi:id="PHP_UML_952" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2929" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2930" annotatedElement="PHP_UML_952"><body>Filenames are added to classes and interfaces</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="pageAsArtifact" xmi:id="PHP_UML_955" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2931" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2932" annotatedElement="PHP_UML_955"><body>Each file generates an UML:Artifact (in the logicial view)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="componentView" xmi:id="PHP_UML_958" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2933" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2934" annotatedElement="PHP_UML_958"><body>A component view is created at root model, with the whole scanned file system inside (as components)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="docblocks" xmi:id="PHP_UML_961" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2935" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2936" annotatedElement="PHP_UML_961"><body>Docblocks are read (package, param and return). This includes class, function and file comments.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="dollar" xmi:id="PHP_UML_964" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2937" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2938" annotatedElement="PHP_UML_964"><body>Keep the PHP variable prefix $</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="model" xmi:id="PHP_UML_967" visibility="public" ><type xmi:idref="PHP_UML_917"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2940" annotatedElement="PHP_UML_967"><body>A reference to a PHP_UML_Metamodel_Superstructure object Either parseFile() or parserDirectory() set it, once their job is done.
Or you can set it yourself with a predefined instance of superstructure.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_xmlEncoding" xmi:id="PHP_UML_970" visibility="private" ><type xmi:idref="PHP_UML_5"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2942" annotatedElement="PHP_UML_970"><body>XML Encoding (see the constructor)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_xmi" xmi:id="PHP_UML_973" visibility="private" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2943" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2944" annotatedElement="PHP_UML_973"><body>The concatened XMI string</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_parser" xmi:id="PHP_UML_976" visibility="private" ><type xmi:idref="PHP_UML_1276"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2946" annotatedElement="PHP_UML_976"><body>A reference to a PHP_UML_PHP_Parser object</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_factory" xmi:id="PHP_UML_979" visibility="private" ><type xmi:idref="PHP_UML_1085"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2948" annotatedElement="PHP_UML_979"><body>A reference to a PHP_UML_XMI_Factory object</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_originalDir" xmi:id="PHP_UML_982" visibility="private" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2949" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2950" annotatedElement="PHP_UML_982"><body>Original directory path</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_visited" xmi:id="PHP_UML_985" visibility="private" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2951" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2952" annotatedElement="PHP_UML_985"><body>Stack of parsed files and folders. Used for building the filesystem tree.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_basePathStart" xmi:id="PHP_UML_988" visibility="private" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2953" value="0" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2954" annotatedElement="PHP_UML_988"><body>Start position of the scanned filepath</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_991" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="PHP_UML_992" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_993" 
            name="parseFile" visibility="public" ><ownedParameter xmi:id="PHP_UML_997" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_998" name="filename" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_999" name="model" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2958" value="&#039;default&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2959" annotatedElement="PHP_UML_993"><body>Parse a PHP file, and builds the resulting XMI.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1000" 
            name="parseDirectory" visibility="public" ><ownedParameter xmi:id="PHP_UML_1004" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1005" name="path" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1006" name="model" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2962" value="&#039;default&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2963" annotatedElement="PHP_UML_1000"><body>Parse a PHP file, and builds the resulting XMI.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1007" 
            name="generateXMI" visibility="public" ><ownedParameter xmi:id="PHP_UML_1011" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1012" name="version" direction="in"><type xmi:idref="PHP_UML_15"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2965" value="2.1" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1013" name="xmlEncoding" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2966" value="&#039;iso-8859-1&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2967" annotatedElement="PHP_UML_1007"><body>XMI Generator Generates XMI corresponding to the PHP model stored in $this-&gt;model.

If you need to use this XMI Generator without any previous PHP parsing, simply set $this-&gt;model with a proper PHP_UML_Metamodel_Superstructure object</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1014" 
            name="saveXMI" visibility="public" ><ownedParameter xmi:id="PHP_UML_1017" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1018" name="output_file" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2970" annotatedElement="PHP_UML_1014"><body>Save the previously generated XMI to a file.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1019" 
            name="_saveXMIProfile" visibility="private" ><ownedParameter xmi:id="PHP_UML_1022" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1023" name="output_file" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2973" annotatedElement="PHP_UML_1019"><body>Save a UML Profile XMI-suited with PHP_UML.

THIS IS EXPERIMENTAL.
Only XMI and UML &gt;= 2.x</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1024" 
            name="__get" visibility="public" ><ownedParameter xmi:id="PHP_UML_1028" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1029" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2976" annotatedElement="PHP_UML_1024"><body>Accessor to the XMI.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1030" 
            name="atFile" visibility="protected" ><ownedParameter xmi:id="PHP_UML_1034" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1035" name="level" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1036" name="pathfile" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2980" annotatedElement="PHP_UML_1030"><body>Function executed each time a new file is traversed</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1037" 
            name="atFolderIn" visibility="protected" ><ownedParameter xmi:id="PHP_UML_1041" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1042" name="level" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1043" name="dir" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2984" annotatedElement="PHP_UML_1037"><body>Enters a new folder</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1044" 
            name="atFolderOut" visibility="protected" ><ownedParameter xmi:id="PHP_UML_1048" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1049" name="level" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1050" name="dir" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2988" annotatedElement="PHP_UML_1044"><body>Exits a folder</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1051" 
            name="addPackage" visibility="protected" ><ownedParameter xmi:id="PHP_UML_1055" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1056" name="package" direction="in"></ownedParameter><ownedParameter xmi:id="PHP_UML_1057" name="stripTag" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_2991" value="false" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2992" annotatedElement="PHP_UML_1051"><body>Traverses all packages, and adds recursively the elements found to the &quot;xmi&quot; string property.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1058" 
            name="_getFilename" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1062" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1063" name="x" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2995" annotatedElement="PHP_UML_1058"><body>Filename part of a given path</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1064" 
            name="_getBasename" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1068" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1069" name="x" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2998" annotatedElement="PHP_UML_1064"><body>Basename part of a given path</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_2999" annotatedElement="PHP_UML_944"><body>The main class to instantiate</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Exception" xmi:id="PHP_UML_1070" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3000" annotatedElement="PHP_UML_1070"><body>Subclass for PHP_UML_Exception</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Warning" xmi:id="PHP_UML_1072" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="stack" xmi:id="PHP_UML_1074" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_3"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3002" annotatedElement="PHP_UML_1074"><body>The $stack to read.</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_1077" 
            name="add" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1080" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1081" name="message" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3005" annotatedElement="PHP_UML_1077"><body>Adds a message to the pile</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1082" 
            name="clear" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1084" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3007" annotatedElement="PHP_UML_1082"><body>Clears the pile</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3008" annotatedElement="PHP_UML_1072"><body>Maintains of stack of warning messages. Worth to being checked, especially if multiple classes in your PHP files have the same name...</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_Factory" xmi:id="PHP_UML_1085" visibility="package"
            isAbstract="true"><ownedAttribute xmi:type="uml:Property" name="EXPORTER_NAME" xmi:id="PHP_UML_1087" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3009" value="&#039;PEAR::PHP_UML&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PHP_FILE" xmi:id="PHP_UML_1088" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3010" value="&#039;PHP File&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="stereotypes" xmi:id="PHP_UML_1089" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3011" value="array(&#039;File&#039;,selfPHP_FILE)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="extensions" xmi:id="PHP_UML_1090" visibility="public"  isStatic="true"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3012" value="array(&#039;&#039;=&gt;&#039;File&#039;,&#039;php&#039;=&gt;selfPHP_FILE)" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1091" 
            name="guessStereotype" visibility="protected"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1095" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1096" name="filename" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3014" value="&#039;&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3015" annotatedElement="PHP_UML_1091"><body>Retrieves the ID of a stereotype, given a filename</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1097" 
            name="generateID" visibility="protected"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1098" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1099" name="type" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1100" name="element" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1101" 
            name="getFilesInPackage" visibility="protected"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1102" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1103" name="package" direction="inout"><type xmi:idref="PHP_UML_3"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1104" 
            name="getComponentView" visibility="public" ><ownedParameter xmi:id="PHP_UML_1108" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1109" name="obj" direction="inout"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3023" annotatedElement="PHP_UML_1104"><body>Insert a component view of the scanned file system.
Files are treated as components (all files are inserted) Folders are treated as subsystems in UML1, and as nested components in UML2.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1110" 
            name="factory" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1114" name="return" direction="return"><type xmi:idref="PHP_UML_1085"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1115" name="version" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3026" annotatedElement="PHP_UML_1110"><body>Factory method</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3027" annotatedElement="PHP_UML_1085"><body>Abstract class to build UML elements through XMI code.
Only basic UML concepts are available.
To deal with the two different versions of XMI (1.4 and 2.1), you must use one of the two specialized versions : PHP_UML_XMI_Factory1, or PHP_UML_XMI_Factory2</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_Factory1" xmi:id="PHP_UML_1116" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3028" general="PHP_UML_1085"/> <ownedAttribute xmi:type="uml:Property" name="XMI_VERSION" xmi:id="PHP_UML_1118" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_15"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3029" value="1.2" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="UML_VERSION" xmi:id="PHP_UML_1119" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_15"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3030" value="1.4" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DEFAULT_CLASSIFIER_ATT" xmi:id="PHP_UML_1120" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3031" value="&#039; visibility=&quot;public&quot; isAbstract=&quot;false&quot; 
        isSpecification=&quot;false&quot; isRoot=&quot;false&quot; isLeaf=&quot;false&quot; &#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1121" 
            name="getModelOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1124" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1125" name="model" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3034" annotatedElement="PHP_UML_1121"><body>Formates the XMI header</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1126" 
            name="getPackageOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1129" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1130" name="package" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3037" annotatedElement="PHP_UML_1126"><body>Formates the opening tag for a package</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1131" 
            name="getPackageClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1133" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3039" annotatedElement="PHP_UML_1131"><body>Formates the closing tag of a package</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1134" 
            name="getDatatype" visibility="public" ><ownedParameter xmi:id="PHP_UML_1137" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1138" name="type" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3042" annotatedElement="PHP_UML_1134"><body>Formates the XMI declaration of the main PHP types (official and unofficial ones)</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1139" 
            name="getModelClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1141" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3044" annotatedElement="PHP_UML_1139"><body>Formates the closing tag of an XMI:Model</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1142" 
            name="getClass" visibility="public" ><ownedParameter xmi:id="PHP_UML_1143" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1144" name="class" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1145" 
            name="getInterface" visibility="public" ><ownedParameter xmi:id="PHP_UML_1146" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1147" name="interface" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1148" 
            name="_getGeneralizations" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1149" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1150" name="client" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1151" name="general" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1152" 
            name="_getRealizations" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1153" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1154" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1155" 
            name="getProperty" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1156" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1157" name="property" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1158" 
            name="_getTypeAndDefProp" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1162" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1163" name="parameter" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1164" name="id" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3059" annotatedElement="PHP_UML_1158"><body>Special version of getTypeAndDefault for XMI 1.x Splits a parameter into its type, name and default value</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1165" 
            name="getOperation" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1166" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1167" name="operation" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1168" 
            name="getParameter" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1169" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1170" name="parameter" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1171" name="order" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3064" value="0" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1172" 
            name="_getTypeAndDefault" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1173" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1174" name="parameter" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1175" name="id" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1176" 
            name="getArtifacts" visibility="public" ><ownedParameter xmi:id="PHP_UML_1181" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1182" name="files_list" direction="in"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1183" name="package" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3071" annotatedElement="PHP_UML_1176"><body>Gets the XMI code of the artifacts in a given package</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1184" 
            name="getSubsystemOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1189" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1190" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1191" name="id" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3074" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3075" annotatedElement="PHP_UML_1184"><body>Formates the XMI code for a subsystem</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1192" 
            name="getSubsystemClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1193" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1194" 
            name="getComponent" visibility="public" ><ownedParameter xmi:id="PHP_UML_1200" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1201" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1202" name="id" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3079" value="null" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1203" name="stereotype" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3080" value="&#039;&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3081" annotatedElement="PHP_UML_1194"><body>Formates the XMI for a component</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1204" 
            name="getProfile" visibility="public" ><ownedParameter xmi:id="PHP_UML_1205" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3083" annotatedElement="PHP_UML_1116"><body>Implementation class to create XMI in version 1</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_Factory2" xmi:id="PHP_UML_1206" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3084" general="PHP_UML_1085"/> <ownedAttribute xmi:type="uml:Property" name="XMI_VERSION" xmi:id="PHP_UML_1208" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3085" value="&#039;2.1&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="UML_VERSION" xmi:id="PHP_UML_1209" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3086" value="&#039;2.1.2&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DEFAULT_CLASSIFIER_ATT" xmi:id="PHP_UML_1210" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3087" value="&#039; visibility=&quot;public&quot; isAbstract=&quot;false&quot; &#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="profile" xmi:id="PHP_UML_1211" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3088" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3089" annotatedElement="PHP_UML_1211"><body>PHP_UML UML Profile (TODO)</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_1214" 
            name="getModelOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1215" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1216" name="model" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1217" 
            name="getPackageOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1218" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1219" name="package" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1220" 
            name="getPackageClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1221" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1222" 
            name="getDatatype" visibility="public" ><ownedParameter xmi:id="PHP_UML_1223" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1224" name="type" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1225" 
            name="getModelClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1226" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1227" 
            name="getClass" visibility="public" ><ownedParameter xmi:id="PHP_UML_1228" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1229" name="class" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1230" 
            name="getInterface" visibility="public" ><ownedParameter xmi:id="PHP_UML_1231" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1232" name="interface" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1233" 
            name="_getRealizations" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1234" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1235" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1236" 
            name="_getGeneralizations" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1237" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1238" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1239" 
            name="getProperty" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1240" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1241" name="property" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1242" 
            name="getOperation" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1243" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1244" name="operation" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1245" 
            name="getParameter" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1246" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1247" name="parameter" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1248" name="order" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3112" value="0" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1249" 
            name="_getTypeAndDefault" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1250" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1251" name="parameter" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1252" name="id" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1253" 
            name="getComment" visibility="public" ><ownedParameter xmi:id="PHP_UML_1254" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1255" name="id" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1256" name="name" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1257" name="body" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1258" 
            name="getArtifacts" visibility="public" ><ownedParameter xmi:id="PHP_UML_1259" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1260" name="obj" direction="inout"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3121" value="array()" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1261" name="package" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3122" value="&#039;&#039;" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1262" 
            name="getSubsystemOpen" visibility="public" ><ownedParameter xmi:id="PHP_UML_1263" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1264" name="name" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1265" name="id" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3125" value="null" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1266" 
            name="getSubsystemClose" visibility="public" ><ownedParameter xmi:id="PHP_UML_1267" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1268" 
            name="getComponent" visibility="public" ><ownedParameter xmi:id="PHP_UML_1269" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1270" name="name" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1271" name="id" direction="in"><type xmi:idref="PHP_UML_1"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3129" value="null" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1272" 
            name="getProfile" visibility="public" ><ownedParameter xmi:id="PHP_UML_1275" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3131" annotatedElement="PHP_UML_1272"><body>Formates a Profile adapted to PHP_UML.

TODO. Experimental.</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3132" annotatedElement="PHP_UML_1206"><body>Implementation class to create XMI in version 2. See version 1 for explanations.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_PHP_Parser" xmi:id="PHP_UML_1276" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="PREG_VARIABLE" xmi:id="PHP_UML_1278" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3133" value="&#039;[a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3134" annotatedElement="PHP_UML_1278"><body>Regular expressions for a PHP variable</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PREG_HEREDOC" xmi:id="PHP_UML_1280" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3135" value="&#039;&lt;&lt;&lt;([^&lt;\n\r]*)[\n\r]&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PREG_COMMENT" xmi:id="PHP_UML_1281" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3136" value="&#039;\/\/[^\n]*\n|\/\*.*\*\/|#[^\n]*\n&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PREG_PACKAGE" xmi:id="PHP_UML_1282" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3137" value="&#039;\*[ \t]+@package[ \t]+([^\s]+)\s&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="model" xmi:id="PHP_UML_1283" visibility="public" ><type xmi:idref="PHP_UML_917"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3139" annotatedElement="PHP_UML_1283"><body>Reference to a PHP_UML_Metamodel_Superstructure (where the parser stores all the program elements it finds)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_text" xmi:id="PHP_UML_1286" visibility="private" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3140" value="&#039;&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_filename" xmi:id="PHP_UML_1287" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_docblocks" xmi:id="PHP_UML_1288" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_dollar" xmi:id="PHP_UML_1289" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_cancel" xmi:id="PHP_UML_1290" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_packageSeqIdx" xmi:id="PHP_UML_1291" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_1292" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="PHP_UML_1297" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1298" name="root" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1299" name="docblocks" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3148" value="true" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1300" name="dollar" direction="in"><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3149" value="true" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3150" annotatedElement="PHP_UML_1292"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1301" 
            name="parse" visibility="public" ><ownedParameter xmi:id="PHP_UML_1304" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1305" name="filename" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3153" annotatedElement="PHP_UML_1301"><body>Parses a PHP file</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1306" 
            name="finalize" visibility="public" ><ownedParameter xmi:id="PHP_UML_1308" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3155" annotatedElement="PHP_UML_1306"><body>Launches the resolution of the references for all stacks from root 
Every reference (a temporary string) is replaced by a PHP reference to the corresponding type (that is, a class or a datatype) To be run once the filesystem scan is complete.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1309" 
            name="_addPackage" visibility="private" ><ownedParameter xmi:id="PHP_UML_1314" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1315" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1316" name="baseIdx" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3158" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3159" annotatedElement="PHP_UML_1309"><body>Adds a package to the &quot;packages&quot; stack</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1317" 
            name="_getClassDocIdx" visibility="private" ><ownedParameter xmi:id="PHP_UML_1321" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1322" name="classDocblock" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3162" annotatedElement="PHP_UML_1317"><body>Get the index of the corresponding @package class docblock</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1323" 
            name="_addInterface" visibility="private" ><ownedParameter xmi:id="PHP_UML_1328" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1329" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1330" name="attr" direction="in"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1331" name="classPkgIndex" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3167" annotatedElement="PHP_UML_1323"><body>Adds an interface to the &quot;interfaces&quot; stack</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1332" 
            name="_addClass" visibility="private" ><ownedParameter xmi:id="PHP_UML_1337" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1338" name="name" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1339" name="attr" direction="in"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1340" name="classPkgIndex" direction="in"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3172" annotatedElement="PHP_UML_1332"><body>Adds a class to the &quot;classes&quot; stack ($this-&gt;model-&gt;classes)</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1341" 
            name="_addOperation" visibility="private" ><ownedParameter xmi:id="PHP_UML_1342" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1343" name="name" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1344" name="attr" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1345" name="modeInterface" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1346" 
            name="_addProperty" visibility="private" ><ownedParameter xmi:id="PHP_UML_1347" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1348" name="name" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1349" name="attr" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1350" name="default" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1351" 
            name="_addParameters" visibility="private" ><ownedParameter xmi:id="PHP_UML_1352" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1353" name="set" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1354" name="docblock" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1355" 
            name="_findClass" visibility="private" ><ownedParameter xmi:id="PHP_UML_1356" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1357" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1358" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1359" 
            name="_findClassRelation" visibility="private" ><ownedParameter xmi:id="PHP_UML_1360" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1361" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1362" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1363" 
            name="_findNamespace" visibility="private" ><ownedParameter xmi:id="PHP_UML_1364" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1365" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1366" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1367" 
            name="_findPackageInDocblock" visibility="private" ><ownedParameter xmi:id="PHP_UML_1368" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1369" name="text" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1370" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1371" 
            name="_findFileDocblock" visibility="private" ><ownedParameter xmi:id="PHP_UML_1376" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1377" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1378" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3199" annotatedElement="PHP_UML_1371"><body>Looks into file docblock, till it finds the 1st @package</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1379" 
            name="_findProperty" visibility="private" ><ownedParameter xmi:id="PHP_UML_1380" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1381" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1382" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1383" 
            name="_findAttr" visibility="private" ><ownedParameter xmi:id="PHP_UML_1384" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1385" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1386" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1387" 
            name="_findFunction" visibility="private" ><ownedParameter xmi:id="PHP_UML_1388" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1389" name="text" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1390" name="set" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1391" 
            name="_revDocblock" visibility="private" ><ownedParameter xmi:id="PHP_UML_1395" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1396" name="text" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3211" annotatedElement="PHP_UML_1391"><body>Looks for a docblock backwards</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1397" 
            name="_findParamInDocblock" visibility="private" ><ownedParameter xmi:id="PHP_UML_1401" name="return" direction="return"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1402" name="text" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3214" annotatedElement="PHP_UML_1397"><body>Search for docblock tags</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1403" 
            name="_getFilePackage" visibility="private" ><ownedParameter xmi:id="PHP_UML_1404" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1405" 
            name="_cleanParameter" visibility="private" ><ownedParameter xmi:id="PHP_UML_1406" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1407" name="str" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1408" 
            name="_splitNameType" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1414" name="return" direction="return"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1415" name="parameter" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1416" name="default" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3220" value="&#039;&#039;" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1417" name="param" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3221" value="&#039;&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3222" annotatedElement="PHP_UML_1408"><body>Splits a parameter into its name and type</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1418" 
            name="_cleanVariable" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1419" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1420" name="str" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1421" 
            name="_stripComments" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1422" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1423" name="str" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1424" 
            name="_getVisibility" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1425" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1426" name="arr" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1427" 
            name="_guessType" visibility="private"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1431" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1432" name="value" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3231" annotatedElement="PHP_UML_1427"><body>Tries to guess the type of a given value</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1433" 
            name="_resolveReferences" visibility="private" ><ownedParameter xmi:id="PHP_UML_1437" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1438" name="ns" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1439" name="_oDef" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3235" annotatedElement="PHP_UML_1433"><body>Recursively replaces the temporary string values by references in a package</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1440" 
            name="_searchIntoPackage" visibility="private" ><ownedParameter xmi:id="PHP_UML_1441" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1442" name="ns" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1443" name="value" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1444" 
            name="_searchIntoDatatype" visibility="private" ><ownedParameter xmi:id="PHP_UML_1445" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1446" name="value" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1447" 
            name="_resolveType" visibility="private" ><ownedParameter xmi:id="PHP_UML_1453" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1454" name="pkg" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1455" name="element" direction="inout"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1456" name="_pkgDef" direction="inout"></ownedParameter><ownedParameter xmi:id="PHP_UML_1457" name="context" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3246" annotatedElement="PHP_UML_1447"><body>Makes the type resolution for a given element in a given package</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3247" annotatedElement="PHP_UML_1276"><body>A combination of string iteration and regular expressions.
It stores all the elements if finds in MOF program elements :
$packages, $interfaces, $classes, $functions, $parameters 
Most navigabilities between associated elements are bidirectional (the packages know their owned elements, and the classes know their nesting package) At first, relations use string references (the name of the element).
Once the parsing is completed, the method finalize() must be called, so that the named references be replaced by PHP references (&amp;$xxx).</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_79" name="blah"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_80" name="blahblah"><packagedElement xmi:type="uml:Class" name="test_541886" xmi:id="PHP_UML_81" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3248" annotatedElement="PHP_UML_81"><body>Test for bug #541886 
Multiple @package or @subpackage tags causing a warning</body></ownedComment></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_120" name="notparsed"><packagedElement xmi:type="uml:Class" name="notseen" xmi:id="PHP_UML_121" visibility="package"
            isAbstract="false"></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_250" name="_test1"><packagedElement xmi:type="uml:Class" name="bug_556894_base" xmi:id="PHP_UML_251" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="test" xmi:id="PHP_UML_255" visibility="public" ><type xmi:idref="PHP_UML_1"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3250" annotatedElement="PHP_UML_255"><body>I'm a test var</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_257" 
            name="test" visibility="public" ><ownedParameter xmi:id="PHP_UML_259" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3252" annotatedElement="PHP_UML_257"><body>I'm a test method</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3253" annotatedElement="PHP_UML_251"><body>Base Class</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="bug_556894_sub1" xmi:id="PHP_UML_260" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3254" general="PHP_UML_251"/> <ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3255" annotatedElement="PHP_UML_260"><body>Subclass in same subpackage</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_264" name="_test2"><packagedElement xmi:type="uml:Class" name="bug_556894_sub2" xmi:id="PHP_UML_265" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3256" annotatedElement="PHP_UML_265"><body>Subclass in different subpackage</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_774" name="Metamodel"><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_NamedElement" xmi:id="PHP_UML_775" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="name" xmi:id="PHP_UML_782" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3258" annotatedElement="PHP_UML_775"><body>PHP_UML (MOF Program elements classes) 
This is a TEST sample, designed to by parsed by PHP_UML itself.
Do not use it.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Type" xmi:id="PHP_UML_783" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3259" general="PHP_UML_775"/> </packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_TypedElement" xmi:id="PHP_UML_784" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3260" general="PHP_UML_775"/> <ownedAttribute xmi:type="uml:Property" name="type" xmi:id="PHP_UML_785" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Interface" xmi:id="PHP_UML_786" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3262" general="PHP_UML_783"/> <ownedAttribute xmi:type="uml:Property" name="superClass" xmi:id="PHP_UML_787" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3263" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedOperation" xmi:id="PHP_UML_788" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3264" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="file" xmi:id="PHP_UML_789" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="package" xmi:id="PHP_UML_790" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Class" xmi:id="PHP_UML_791" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3267" general="PHP_UML_786"/> <ownedAttribute xmi:type="uml:Property" name="ownedAttribute" xmi:id="PHP_UML_792" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3268" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isAbstract" xmi:id="PHP_UML_793" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="PHP_UML_794" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="implements" xmi:id="PHP_UML_795" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3271" value="array()" /></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Operation" xmi:id="PHP_UML_796" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3272" general="PHP_UML_775"/> <ownedAttribute xmi:type="uml:Property" name="isAbstract" xmi:id="PHP_UML_797" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="PHP_UML_798" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedParameter" xmi:id="PHP_UML_799" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3275" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="class" xmi:id="PHP_UML_800" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="visibility" xmi:id="PHP_UML_801" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Property" xmi:id="PHP_UML_802" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3278" general="PHP_UML_784"/> <ownedAttribute xmi:type="uml:Property" name="isReadOnly" xmi:id="PHP_UML_803" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="PHP_UML_804" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="visibility" xmi:id="PHP_UML_805" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="default" xmi:id="PHP_UML_806" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="class" xmi:id="PHP_UML_807" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Parameter" xmi:id="PHP_UML_808" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3284" general="PHP_UML_784"/> <ownedAttribute xmi:type="uml:Property" name="default" xmi:id="PHP_UML_809" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="operation" xmi:id="PHP_UML_810" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="direction" xmi:id="PHP_UML_811" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Package" xmi:id="PHP_UML_812" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3288" general="PHP_UML_775"/> <ownedAttribute xmi:type="uml:Property" name="nestingPackage" xmi:id="PHP_UML_813" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="nestedPackage" xmi:id="PHP_UML_814" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3290" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedType" xmi:id="PHP_UML_815" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3291" value="array()" /></ownedAttribute></packagedElement></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_497" name="F3"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_500" name="FLOW3"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_501" name="Core"><packagedElement xmi:type="uml:Class" name="Bootstrap" xmi:id="PHP_UML_502" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="REVISION" xmi:id="PHP_UML_507" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3292" value="&#039;$Revision: 3548 $&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3293" annotatedElement="PHP_UML_507"><body>FLOW3's Subversion revision</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="MINIMUM_PHP_VERSION" xmi:id="PHP_UML_509" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3294" value="&#039;5.3.0RC2-dev&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3295" annotatedElement="PHP_UML_509"><body>Required PHP version</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="MAXIMUM_PHP_VERSION" xmi:id="PHP_UML_511" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3296" value="&#039;5.99.9&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="context" xmi:id="PHP_UML_512" visibility="protected" ><type xmi:idref="PHP_UML_5"/><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3298" annotatedElement="PHP_UML_512"><body>The application context</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="siteLocked" xmi:id="PHP_UML_515" visibility="protected" ><type xmi:idref="PHP_UML_13"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3299" value="FALSE" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3300" annotatedElement="PHP_UML_515"><body>Flag telling if the site / application is currently locked, e.g. due to flushing the code caches</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="configurationManager" xmi:id="PHP_UML_518" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="objectManager" xmi:id="PHP_UML_520" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="objectFactory" xmi:id="PHP_UML_522" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="packageManager" xmi:id="PHP_UML_524" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="FLOW3Package" xmi:id="PHP_UML_526" visibility="protected" ><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3306" annotatedElement="PHP_UML_526"><body>A reference to the FLOW3 package which can be used before the Package Manager is initialized</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classLoader" xmi:id="PHP_UML_529" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="reflectionService" xmi:id="PHP_UML_531" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="signalSlotDispatcher" xmi:id="PHP_UML_533" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="exceptionHandler" xmi:id="PHP_UML_535" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="systemLogger" xmi:id="PHP_UML_537" visibility="protected" ></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="settings" xmi:id="PHP_UML_539" visibility="protected" ><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3313" annotatedElement="PHP_UML_539"><body>The settings for the FLOW3 package</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_542" 
            name="defineConstants" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_545" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3315" annotatedElement="PHP_UML_542"><body>Defines various path constants used by FLOW3 and if no root path or web root was specified by an environment variable, exits with a respective error message.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_557" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="PHP_UML_563" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_564" name="context" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3317" value="&#039;Production&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3318" annotatedElement="PHP_UML_557"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_565" 
            name="initialize" visibility="public" ><ownedParameter xmi:id="PHP_UML_572" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3320" annotatedElement="PHP_UML_565"><body>Explicitly initializes all necessary FLOW3 objects by invoking the various initialize* methods.

Usually this method is only called from unit tests or other applications which need a more fine grained control over the initialization and request handling process. Most other applications just call the run() method.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_573" 
            name="initializeClassLoader" visibility="public" ><ownedParameter xmi:id="PHP_UML_578" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3322" annotatedElement="PHP_UML_573"><body>Initializes the class loader</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_579" 
            name="initializeConfiguration" visibility="public" ><ownedParameter xmi:id="PHP_UML_584" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3324" annotatedElement="PHP_UML_579"><body>Initializes the configuration manager and the FLOW3 settings</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_585" 
            name="initializeErrorHandling" visibility="public" ><ownedParameter xmi:id="PHP_UML_590" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3326" annotatedElement="PHP_UML_585"><body>Initializes the Error component</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_591" 
            name="initializeObjectManager" visibility="public" ><ownedParameter xmi:id="PHP_UML_596" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3328" annotatedElement="PHP_UML_591"><body>Initializes the Object framework.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_597" 
            name="initializeSystemLogger" visibility="public" ><ownedParameter xmi:id="PHP_UML_601" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3330" annotatedElement="PHP_UML_597"><body>Initializes the system logger</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_602" 
            name="initializeLockManager" visibility="public" ><ownedParameter xmi:id="PHP_UML_607" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3332" annotatedElement="PHP_UML_602"><body>Initializes the Lock Manager</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_608" 
            name="initializePackages" visibility="public" ><ownedParameter xmi:id="PHP_UML_613" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3334" annotatedElement="PHP_UML_608"><body>Initializes the package system and loads the package configuration and settings provided by the packages.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_614" 
            name="initializeSignalsSlots" visibility="public" ><ownedParameter xmi:id="PHP_UML_619" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3336" annotatedElement="PHP_UML_614"><body>Initializes the Signals and Slots mechanism</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_620" 
            name="initializeCache" visibility="public" ><ownedParameter xmi:id="PHP_UML_625" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3338" annotatedElement="PHP_UML_620"><body>Initializes the cache framework</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_626" 
            name="initializeFileMonitor" visibility="public" ><ownedParameter xmi:id="PHP_UML_631" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3340" annotatedElement="PHP_UML_626"><body>Initializes the file monitoring</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_632" 
            name="monitorClassFiles" visibility="protected" ><ownedParameter xmi:id="PHP_UML_636" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3342" annotatedElement="PHP_UML_632"><body>Checks if classes (ie. php files containing classes) have been altered and if so flushes the related caches.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_641" 
            name="monitorRoutesConfigurationFiles" visibility="protected" ><ownedParameter xmi:id="PHP_UML_645" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3344" annotatedElement="PHP_UML_641"><body>Checks if Routes.yaml files have been altered and if so flushes the related caches.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_649" 
            name="initializeReflection" visibility="public" ><ownedParameter xmi:id="PHP_UML_654" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3346" annotatedElement="PHP_UML_649"><body>Initializes the Reflection Service</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_655" 
            name="initializeObjects" visibility="public" ><ownedParameter xmi:id="PHP_UML_660" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3348" annotatedElement="PHP_UML_655"><body>Initializes the object configuration</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_661" 
            name="initializeAOP" visibility="public" ><ownedParameter xmi:id="PHP_UML_666" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3350" annotatedElement="PHP_UML_661"><body>Initializes the AOP framework</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_667" 
            name="initializeLocale" visibility="public" ><ownedParameter xmi:id="PHP_UML_672" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3352" annotatedElement="PHP_UML_667"><body>Initializes the Locale service</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_673" 
            name="initializeSession" visibility="public" ><ownedParameter xmi:id="PHP_UML_678" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3354" annotatedElement="PHP_UML_673"><body>Initializes the session</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_679" 
            name="initializePersistence" visibility="public" ><ownedParameter xmi:id="PHP_UML_684" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3356" annotatedElement="PHP_UML_679"><body>Initializes the persistence framework</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_685" 
            name="initializeResources" visibility="public" ><ownedParameter xmi:id="PHP_UML_690" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3358" annotatedElement="PHP_UML_685"><body>Initialize the resource management component, setting up stream wrappers, publishing the public resources of all found packages, ...</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_691" 
            name="run" visibility="public" ><ownedParameter xmi:id="PHP_UML_696" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3360" annotatedElement="PHP_UML_691"><body>Runs the the FLOW3 Framework by resolving an appropriate Request Handler and passing control to it.
If the Framework is not initialized yet, it will be initialized.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_697" 
            name="emitFinishedNormalRun" visibility="protected" ><ownedParameter xmi:id="PHP_UML_704" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3362" annotatedElement="PHP_UML_697"><body>Signalizes that FLOW3 completed the shutdown process after a normal run.</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_705" 
            name="ensureRequiredEnvironment" visibility="protected" ><ownedParameter xmi:id="PHP_UML_709" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3364" annotatedElement="PHP_UML_705"><body>Checks PHP version and other parameters of the environment</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_710" 
            name="evaluatePackageConfiguration" visibility="protected" ><ownedParameter xmi:id="PHP_UML_718" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_719" name="package" direction="in"></ownedParameter><ownedParameter xmi:id="PHP_UML_720" name="packageConfiguration" direction="in"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3368" annotatedElement="PHP_UML_710"><body>(For now) evaluates the package configuration</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3369" annotatedElement="PHP_UML_502"><body>General purpose central core hyper FLOW3 bootstrap class</body></ownedComment></packagedElement></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_817" name="Saggitarius"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3370" annotatedElement="PHP_UML_817"><body>Test-case (emptyns2.php) with an empty namespace (it should not be ignored if appropriate switch was set in PHP_UML)</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_828" name="SaggitariusStar"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3371" annotatedElement="PHP_UML_828"><body>Test-case (emptyns6.php) with an empty namespace 
(it should not be ignored if appropriate switch was set in PHP_UML) 
Bla bla bla...</body></ownedComment><packagedElement xmi:type="uml:Interface"  name="BigBlackHole" xmi:id="PHP_UML_830" visibility="package" isAbstract="true"></packagedElement><packagedElement xmi:type="uml:Interface"  name="SecondBigBlackHole" xmi:id="PHP_UML_844" visibility="package" isAbstract="true"></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_832" name="Level1"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_833" name="Level2"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3372" annotatedElement="PHP_UML_833"><body>Test-case (emptyns5.php) with an empty namespace 
(it should not be ignored if appropriate switch was set in PHP_UML)</body></ownedComment><packagedElement xmi:type="uml:Interface"  name="test" xmi:id="PHP_UML_840" visibility="package" isAbstract="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3373" annotatedElement="PHP_UML_840"><body>Comment for the test interface 
Bla bla bla...</body></ownedComment></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1459" name="Orion"><packagedElement xmi:type="uml:Class" name="TestClass1" xmi:id="PHP_UML_1460" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="fooPHP" xmi:id="PHP_UML_1464" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="fooPublic" xmi:id="PHP_UML_1465" visibility="public" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_fooPrivate" xmi:id="PHP_UML_1466" visibility="private" ><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="fooProtected" xmi:id="PHP_UML_1467" visibility="protected" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3377" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="fooDefault" xmi:id="PHP_UML_1468" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3378" value="&#039;Some value&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="NAME" xmi:id="PHP_UML_1469" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3379" value="&#039;my class&#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1470" 
            name="setFoo" visibility="public" ><ownedParameter xmi:id="PHP_UML_1472" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1473" name="str" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3381" value="&#039;Some characters&#039;" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1474" 
            name="getFoo" visibility="public" ><ownedParameter xmi:id="PHP_UML_1476" name="return" direction="return"><type xmi:idref="PHP_UML_5"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3383" annotatedElement="PHP_UML_1460"><body>A test class to play with package PHP_UML</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="TestClass2" xmi:id="PHP_UML_1483" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3384" general="PHP_UML_1460"/> <ownedAttribute xmi:type="uml:Property" name="foo2" xmi:id="PHP_UML_1487" visibility="private"  isStatic="true"><type xmi:idref="PHP_UML_1"/></ownedAttribute><ownedOperation xmi:id="PHP_UML_1488" 
            name="dumbMethod" visibility="public" ><ownedParameter xmi:id="PHP_UML_1492" name="return" direction="return"><type xmi:idref="PHP_UML_3"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1493" name="age" direction="inout"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1494" name="object" direction="in"><type xmi:idref="PHP_UML_1460"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1495" name="name" direction="in"><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3389" value="&#039;Some characters&#039;" /></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3390" annotatedElement="PHP_UML_1483"><body>A test class to play with package PHP_UML</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1497" name="Andromedia"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3391" annotatedElement="PHP_UML_1497"><body>Let's back to the package Andromedia</body></ownedComment><packagedElement xmi:type="uml:Interface"  name="iTest3" xmi:id="PHP_UML_1498" visibility="package" isAbstract="true"><ownedOperation xmi:id="PHP_UML_1501" 
            name="add" visibility="public" ><ownedParameter xmi:id="PHP_UML_1502" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1503" name="a" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3393" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1504" name="b" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3394" value="0" /></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3395" annotatedElement="PHP_UML_1498"><body>Third test file for PEAR PHP_UML</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Interface"  name="iTest5" xmi:id="PHP_UML_1505" visibility="package" isAbstract="true"><ownedOperation xmi:id="PHP_UML_1506" 
            name="substract" visibility="public" ><ownedParameter xmi:id="PHP_UML_1507" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1508" name="a" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1509" name="b" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="TestClass3" xmi:id="PHP_UML_1510" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1511" 
            name="add" visibility="public" ><ownedParameter xmi:id="PHP_UML_1513" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1514" name="a" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3402" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1515" name="b" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3403" value="0" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1516" 
            name="substract" visibility="public" ><ownedParameter xmi:id="PHP_UML_1517" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1518" name="a" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1519" name="b" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3399" client="PHP_UML_1510" supplier="PHP_UML_1498" realizingClassifier="PHP_UML_1498"/><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3400" client="PHP_UML_1510" supplier="PHP_UML_1505" realizingClassifier="PHP_UML_1505"/><packagedElement xmi:type="uml:Class" name="TestClass4" xmi:id="PHP_UML_1520" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3407" general="PHP_UML_1510"/> </packagedElement><packagedElement xmi:type="uml:Interface"  name="iTest4" xmi:id="PHP_UML_1532" visibility="package" isAbstract="true"><ownedOperation xmi:id="PHP_UML_1533" 
            name="divide" visibility="public" ><ownedParameter xmi:id="PHP_UML_1534" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1535" name="x" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3409" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1536" name="y" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3410" value="1" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1537" 
            name="multiply" visibility="public" ><ownedParameter xmi:id="PHP_UML_1538" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1539" name="x" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1540" name="y" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3414" general="PHP_UML_1498"/> </packagedElement><packagedElement xmi:type="uml:Class" name="Test4" xmi:id="PHP_UML_1541" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1542" 
            name="add" visibility="public" ><ownedParameter xmi:id="PHP_UML_1543" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1544" name="a" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3417" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1545" name="b" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3418" value="0" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1546" 
            name="divide" visibility="public" ><ownedParameter xmi:id="PHP_UML_1547" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1548" name="x" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3420" value="0" /></ownedParameter><ownedParameter xmi:id="PHP_UML_1549" name="y" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3421" value="1" /></ownedParameter></ownedOperation><ownedOperation xmi:id="PHP_UML_1550" 
            name="multiply" visibility="public" ><ownedParameter xmi:id="PHP_UML_1555" name="return" direction="return"><type xmi:idref="PHP_UML_15"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1556" name="x" direction="in"><type xmi:idref="PHP_UML_15"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1557" name="y" direction="in"><type xmi:idref="PHP_UML_15"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3425" annotatedElement="PHP_UML_1550"><body>The multiply operation</body></ownedComment></ownedOperation></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3415" client="PHP_UML_1541" supplier="PHP_UML_1532" realizingClassifier="PHP_UML_1532"/></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1521" name="Cassiopeia"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3426" annotatedElement="PHP_UML_1521"><body>Cassiopeia should now override &quot;Andromedia&quot;.
Note that PHP instruction &quot;namespace&quot; is implemented only from PHP 5.3 and its specification is still subject to change.</body></ownedComment><packagedElement xmi:type="uml:Class" name="Constellation" xmi:id="PHP_UML_1523" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3427" general="PHP_UML_1478"/> <ownedAttribute xmi:type="uml:Property" name="distance" xmi:id="PHP_UML_1525" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3428" value="&#039;far away&#039;" /></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3429" annotatedElement="PHP_UML_1523"><body>&quot;Universe&quot; is not present in the current namespace (Cassiopeia) but it should be found in the global namespace.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="Galaxy" xmi:id="PHP_UML_1526" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3430" general="PHP_UML_1523"/> <ownedAttribute xmi:type="uml:Property" name="age" xmi:id="PHP_UML_1528" visibility="private" ><type xmi:idref="PHP_UML_15"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3431" value="2.500001" /></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3432" annotatedElement="PHP_UML_1526"><body>&quot;Constellation&quot; should be found in the current namespace (Cassiopeia) but TestClass2 should be found nowhere (neither in Cassiopeia nor in the global namespace) since TestClass2 belongs to Orion. A warning should be reported to PHP_UML_Warning.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="SolarSystem" xmi:id="PHP_UML_1529" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3433" general="PHP_UML_1526"/> <ownedAttribute xmi:type="uml:Property" name="elements" xmi:id="PHP_UML_1530" visibility="public" ><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3434" value="array(&#039;planets&#039;,&#039;comets&#039;)" /></ownedAttribute></packagedElement><packagedElement xmi:type="uml:Class" name="Planet" xmi:id="PHP_UML_1559" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="name" xmi:id="PHP_UML_1562" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3435" value="&#039;&#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1563" 
            name="turnsAround" visibility="public" ><ownedParameter xmi:id="PHP_UML_1566" name="return" direction="return"><type xmi:idref="PHP_UML_1559"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1567" name="object" direction="in"><type xmi:idref="PHP_UML_1478"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3438" annotatedElement="PHP_UML_1559"><body>This class belongs to Cassiopeia :</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1569" name="PackageName"><packagedElement xmi:type="uml:Class" name="Net_Sample" xmi:id="PHP_UML_1572" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="foo" xmi:id="PHP_UML_1585" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3439" value="&#039;unknown&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3440" annotatedElement="PHP_UML_1585"><body>The status of foo's universe 
Potential values are 'good', 'fair', 'poor' and 'unknown'.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="_good" xmi:id="PHP_UML_1588" visibility="public" ><type xmi:idref="PHP_UML_11"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3441" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3442" annotatedElement="PHP_UML_1588"><body>The status of life 
Note that names of private properties or methods must be preceeded by an underscore.</body></ownedComment></ownedAttribute><ownedOperation xmi:id="PHP_UML_1592" 
            name="setFoo" visibility="public" ><ownedParameter xmi:id="PHP_UML_1604" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1605" name="arg1" direction="in"><type xmi:idref="PHP_UML_5"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1606" name="arg2" direction="in"><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3445" value="0" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3446" annotatedElement="PHP_UML_1592"><body>Registers the status of foo's universe 
Summaries for methods should use 3rd person declarative rather than 2nd person imperative, beginning with a verb phrase.

Summaries should add description beyond the method's name. The best method names are &quot;self-documenting&quot;, meaning they tell you basically what the method does.  If the summary merely repeats the method name in sentence form, it is not providing more information.

Summary Examples:
+ Sets the label              (preferred) + Set the label               (avoid) + This method sets the label  (avoid) 
Below are the tags commonly used for methods.  A @param tag is required for each parameter the method has.  The @return and</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3447" annotatedElement="PHP_UML_1572"><body>An example of how to write code to PEAR's standards 
Docblock comments start with &quot;/**&quot; at the top.  Notice how the &quot;/&quot; lines up with the normal indenting and the asterisks on subsequent rows are in line with the first asterisk.  The last line of comment text should be immediately followed on the next line by the closing asterisk and slash and then the item you are commenting on should be on the next line below that.  Don't add extra lines.  Please put a blank line between paragraphs as well as between the end of the description and the start of the @tags.  Wrap comments before 80 columns in order to ease readability for a wide variety of users.

Docblocks can only be used for programming constructs which allow them (classes, properties, methods, defines, includes, globals).  See the phpDocumentor documentation for more information.
http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html 
The Javadoc Style Guide is an excellent resource for figuring out how to say what needs to be said in docblock comments.  Much of what is written here is a summary of what is found there, though there are some cases where what's said here overrides what is said there.
http://java.sun.com/j2se/javadoc/writingdoccomments/index.html#styleguide 
The first line of any docblock is the summary.  Make them one short sentence, without a period at the end.  Summaries for classes, properties and constants should omit the subject and simply state the object, because they are describing things rather than actions or behaviors.

Below are the tags commonly used for classes. @category through @version are required.  The remainder should only be used when necessary.
Please use them in the order they appear here.  phpDocumentor has several other tags available, feel free to use them.</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1623" name="Test"><packagedElement xmi:type="uml:Class" name="Exception" xmi:id="PHP_UML_1624" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3448" general="PHP_UML_29"/> </packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1626" name="MilkyWay"><packagedElement xmi:type="uml:Class" name="Moon" xmi:id="PHP_UML_1627" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="visibleSide" xmi:id="PHP_UML_1630" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3449" value="&#039;&#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1632" 
            name="lighten" visibility="public" ><ownedParameter xmi:id="PHP_UML_1636" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1637" name="object" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3452" annotatedElement="PHP_UML_1632"><body>Visible function</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3453" annotatedElement="PHP_UML_1627"><body>This is a test case for the internal docblock.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="Mars" xmi:id="PHP_UML_1755" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="probe" xmi:id="PHP_UML_1759" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3454" value="&#039;Phoenix&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="martians" xmi:id="PHP_UML_1762" visibility="public" ><type xmi:idref="PHP_UML_5"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3455" value="&#039;Green creature&#039;" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1764" 
            name="attack" visibility="public" ><ownedParameter xmi:id="PHP_UML_1768" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1769" name="object" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3458" annotatedElement="PHP_UML_1764"><body>Invisible function (if onlyApi was set to true)</body></ownedComment></ownedOperation><ownedOperation xmi:id="PHP_UML_1770" 
            name="hasWater" visibility="public" ><ownedParameter xmi:id="PHP_UML_1775" name="return" direction="return"><type xmi:idref="PHP_UML_7"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1776" name="object" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3461" annotatedElement="PHP_UML_1770"><body>Visible function</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3462" annotatedElement="PHP_UML_1755"><body>This is a test case for the onlyApi docblock. Should be tested with onlyApi option set to true.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="Mars_Satellite" xmi:id="PHP_UML_1777" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1781" 
            name="turnAroundMars" visibility="public" ><ownedParameter xmi:id="PHP_UML_1782" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3464" annotatedElement="PHP_UML_1777"><body>That class should not appear if parsing option &quot;onlyApi&quot; was set to true (since the class has no &quot;api&quot; docblock)</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1654" name="A"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1655" name="B"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3465" annotatedElement="PHP_UML_1655"><body>Comment for namespace A\B</body></ownedComment><packagedElement xmi:type="uml:Class" name="C" xmi:id="PHP_UML_1657" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3466" client="PHP_UML_1657" supplier="PHP_UML_1658" realizingClassifier="PHP_UML_1658"/><packagedElement xmi:type="uml:Interface"  name="E" xmi:id="PHP_UML_1658" visibility="package" isAbstract="true"></packagedElement><packagedElement xmi:type="uml:Class" name="R" xmi:id="PHP_UML_1688" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3469" annotatedElement="PHP_UML_1688"><body>Comment for class R</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3467" client="PHP_UML_1688" supplier="PHP_UML_1658" realizingClassifier="PHP_UML_1658"/><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3468" client="PHP_UML_1688" supplier="PHP_UML_1690" realizingClassifier="PHP_UML_1690"/><packagedElement xmi:type="uml:Interface"  name="S" xmi:id="PHP_UML_1690" visibility="package" isAbstract="true"></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1659" name="C"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1660" name="D"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3470" annotatedElement="PHP_UML_1660"><body>Comment for namespace C\D</body></ownedComment><packagedElement xmi:type="uml:Interface"  name="E" xmi:id="PHP_UML_1662" visibility="package" isAbstract="true"></packagedElement><packagedElement xmi:type="uml:Class" name="F" xmi:id="PHP_UML_1663" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3471" client="PHP_UML_1663" supplier="PHP_UML_1662" realizingClassifier="PHP_UML_1662"/><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3472" client="PHP_UML_1663" supplier="PHP_UML_1658" realizingClassifier="PHP_UML_1658"/><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1664" name="G"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3473" annotatedElement="PHP_UML_1664"><body>Comment for namespace C\D\G</body></ownedComment><packagedElement xmi:type="uml:Class" name="H" xmi:id="PHP_UML_1666" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3474" general="PHP_UML_1663"/> <ownedOperation xmi:id="PHP_UML_1667" 
            name="cdf" visibility="public"  isStatic="true"><ownedParameter xmi:id="PHP_UML_1668" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1669" name="object" direction="in"><type xmi:idref="PHP_UML_1675"/></ownedParameter></ownedOperation></packagedElement></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1670" name="I"><packagedElement xmi:type="uml:Class" name="J" xmi:id="PHP_UML_1671" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3477" general="PHP_UML_1666"/> </packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3478" client="PHP_UML_1671" supplier="PHP_UML_1684" realizingClassifier="PHP_UML_1684"/><packagedElement xmi:type="uml:Class" name="Boo" xmi:id="PHP_UML_1672" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3479" general="PHP_UML_1675"/> </packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3480" client="PHP_UML_1672" supplier="PHP_UML_1658" realizingClassifier="PHP_UML_1658"/></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1673" name="K"><packagedElement xmi:type="uml:Class" name="Boo" xmi:id="PHP_UML_1674" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3481" general="PHP_UML_1666"/> </packagedElement><packagedElement xmi:type="uml:Class" name="L" xmi:id="PHP_UML_1675" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1676" 
            name="boo" visibility="public" ><ownedParameter xmi:id="PHP_UML_1677" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1678" name="j" direction="inout"><type xmi:idref="PHP_UML_1671"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1679" name="k" direction="in"><type xmi:idref="PHP_UML_3"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3484" value="array(&#039;a&#039;=&gt;&#039;b&#039;)" /></ownedParameter></ownedOperation></packagedElement><packagedElement xmi:type="uml:Class" name="N" xmi:id="PHP_UML_1680" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="PHP_UML_3485" general="PHP_UML_1666"/> <ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3487" annotatedElement="PHP_UML_1680"><body>Comment for class N</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3486" client="PHP_UML_1680" supplier="PHP_UML_1683" realizingClassifier="PHP_UML_1683"/><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1682" name="P"><packagedElement xmi:type="uml:Interface"  name="Q" xmi:id="PHP_UML_1683" visibility="package" isAbstract="true"></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1692" name="T"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3488" annotatedElement="PHP_UML_1692"><body>Comment for namespace T</body></ownedComment><packagedElement xmi:type="uml:Class" name="U" xmi:id="PHP_UML_1694" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="V" xmi:id="PHP_UML_1695" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3489" annotatedElement="PHP_UML_1695"><body>Comment for class V</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1698" name="Truc"><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3490" annotatedElement="PHP_UML_1698"><body>Ce commentaire concerne l'espace de nom Truc</body></ownedComment><packagedElement xmi:type="uml:Class" name="bidule1" xmi:id="PHP_UML_1700" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="T" xmi:id="PHP_UML_1702" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3491" value="0" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1703" 
            name="fonctionDeBidule1" visibility="public" ><ownedParameter xmi:id="PHP_UML_1704" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1705" name="x" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3494" annotatedElement="PHP_UML_1700"><body>Ce commentaire concerne la classe bidule1</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="bidule3" xmi:id="PHP_UML_1719" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Class" name="bidule2" xmi:id="PHP_UML_1720" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="T" xmi:id="PHP_UML_1722" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="PHP_UML_7"/><defaultValue xmi:type="uml:LiteralString" xmi:id="PHP_UML_3495" value="0" /></ownedAttribute><ownedOperation xmi:id="PHP_UML_1723" 
            name="fonctionDeBidule2" visibility="public" ><ownedParameter xmi:id="PHP_UML_1724" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1725" name="x" direction="in"><type xmi:idref="PHP_UML_1"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3498" annotatedElement="PHP_UML_1720"><body>Ce commentaire concerne la classe bidule2</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Interface"  name="Contract" xmi:id="PHP_UML_1728" visibility="package" isAbstract="true"><ownedOperation xmi:id="PHP_UML_1730" 
            name="trop" visibility="public" ><ownedParameter xmi:id="PHP_UML_1731" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="PHP_UML_3500" annotatedElement="PHP_UML_1728"><body>Comment for Contract</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1715" name="Baratin"></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1785" name="Vegetable"><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1786" name="SweetPepper"><packagedElement xmi:type="uml:Class" name="Peel" xmi:id="PHP_UML_1787" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1788" 
            name="test" visibility="public" ><ownedParameter xmi:id="PHP_UML_1789" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1790" name="s" direction="in"><type xmi:idref="PHP_UML_1794"/></ownedParameter></ownedOperation></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1796" name="Cucumber"><packagedElement xmi:type="uml:Class" name="Peel" xmi:id="PHP_UML_1797" visibility="package"
            isAbstract="false"><ownedOperation xmi:id="PHP_UML_1798" 
            name="test" visibility="public" ><ownedParameter xmi:id="PHP_UML_1799" name="return" direction="return"><type xmi:idref="PHP_UML_17"/></ownedParameter><ownedParameter xmi:id="PHP_UML_1800" name="s" direction="in"><type xmi:idref="PHP_UML_1794"/></ownedParameter></ownedOperation></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_1792" name="Fruit"><packagedElement xmi:type="uml:Class" name="SmallOrange" xmi:id="PHP_UML_1793" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="PHP_UML_3505" client="PHP_UML_1793" supplier="PHP_UML_1794" realizingClassifier="PHP_UML_1794"/><packagedElement xmi:type="uml:Interface"  name="Seed" xmi:id="PHP_UML_1794" visibility="package" isAbstract="true"></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="PHP_UML_31" name="Deployment View">
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_32" name="bug-090827.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3506" client="PHP_UML_32" supplier="PHP_UML_33" utilizedElement="PHP_UML_33" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3507" client="PHP_UML_32" supplier="PHP_UML_37" utilizedElement="PHP_UML_37" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_45" name="bug-489398.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3508" client="PHP_UML_45" supplier="PHP_UML_48" utilizedElement="PHP_UML_48" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_60" name="bug-540341.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3509" client="PHP_UML_60" supplier="PHP_UML_61" utilizedElement="PHP_UML_61" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_66" name="bug-540368.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3510" client="PHP_UML_66" supplier="PHP_UML_67" utilizedElement="PHP_UML_67" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_78" name="bug-541886.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3511" client="PHP_UML_78" supplier="PHP_UML_81" utilizedElement="PHP_UML_81" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_86" name="bug-542586.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3512" client="PHP_UML_86" supplier="PHP_UML_96" utilizedElement="PHP_UML_96" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3513" client="PHP_UML_86" supplier="PHP_UML_109" utilizedElement="PHP_UML_109" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3514" client="PHP_UML_86" supplier="PHP_UML_111" utilizedElement="PHP_UML_111" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3515" client="PHP_UML_86" supplier="PHP_UML_116" utilizedElement="PHP_UML_116" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_119" name="bug-548331.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3516" client="PHP_UML_119" supplier="PHP_UML_121" utilizedElement="PHP_UML_121" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_124" name="bug-550489.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3517" client="PHP_UML_124" supplier="PHP_UML_127" utilizedElement="PHP_UML_127" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3518" client="PHP_UML_124" supplier="PHP_UML_130" utilizedElement="PHP_UML_130" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_133" name="bug-553138.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3519" client="PHP_UML_133" supplier="PHP_UML_134" utilizedElement="PHP_UML_134" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_140" name="bug-553560.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3520" client="PHP_UML_140" supplier="PHP_UML_141" utilizedElement="PHP_UML_141" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3521" client="PHP_UML_140" supplier="PHP_UML_148" utilizedElement="PHP_UML_148" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3522" client="PHP_UML_140" supplier="PHP_UML_150" utilizedElement="PHP_UML_150" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3523" client="PHP_UML_140" supplier="PHP_UML_153" utilizedElement="PHP_UML_153" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3524" client="PHP_UML_140" supplier="PHP_UML_155" utilizedElement="PHP_UML_155" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_212" name="bug-553607.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3525" client="PHP_UML_212" supplier="PHP_UML_213" utilizedElement="PHP_UML_213" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_216" name="bug-555768.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3526" client="PHP_UML_216" supplier="PHP_UML_217" utilizedElement="PHP_UML_217" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_236" name="bug-556031-01.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3527" client="PHP_UML_236" supplier="PHP_UML_237" utilizedElement="PHP_UML_237" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_239" name="bug-556031.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3528" client="PHP_UML_239" supplier="PHP_UML_240" utilizedElement="PHP_UML_240" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_242" name="bug-556860.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3529" client="PHP_UML_242" supplier="PHP_UML_243" utilizedElement="PHP_UML_243" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_249" name="bug-556894.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3530" client="PHP_UML_249" supplier="PHP_UML_251" utilizedElement="PHP_UML_251" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3531" client="PHP_UML_249" supplier="PHP_UML_260" utilizedElement="PHP_UML_260" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3532" client="PHP_UML_249" supplier="PHP_UML_265" utilizedElement="PHP_UML_265" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_269" name="bug-557390.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3533" client="PHP_UML_269" supplier="PHP_UML_270" utilizedElement="PHP_UML_270" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_273" name="bug-557861.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3534" client="PHP_UML_273" supplier="PHP_UML_274" utilizedElement="PHP_UML_274" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_277" name="bug-558051.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3535" client="PHP_UML_277" supplier="PHP_UML_283" utilizedElement="PHP_UML_283" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_292" name="bug-559494.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3536" client="PHP_UML_292" supplier="PHP_UML_293" utilizedElement="PHP_UML_293" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_302" name="bug-561101.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3537" client="PHP_UML_302" supplier="PHP_UML_320" utilizedElement="PHP_UML_320" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_442" name="bug-562997.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3538" client="PHP_UML_442" supplier="PHP_UML_445" utilizedElement="PHP_UML_445" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_447" name="bug-566600.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3539" client="PHP_UML_447" supplier="PHP_UML_448" utilizedElement="PHP_UML_448" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_459" name="bug-567059.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_473" name="bug-587733.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3540" client="PHP_UML_473" supplier="PHP_UML_474" utilizedElement="PHP_UML_474" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3541" client="PHP_UML_473" supplier="PHP_UML_484" utilizedElement="PHP_UML_484" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_488" name="bug-772441.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3542" client="PHP_UML_488" supplier="PHP_UML_489" utilizedElement="PHP_UML_489" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_493" name="bug-actions.class.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_496" name="bug-closer-1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3543" client="PHP_UML_496" supplier="PHP_UML_502" utilizedElement="PHP_UML_502" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_721" name="bug-closer-2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_731" name="bug-curls.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3544" client="PHP_UML_731" supplier="PHP_UML_732" utilizedElement="PHP_UML_732" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_747" name="bug-escaping.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3545" client="PHP_UML_747" supplier="PHP_UML_748" utilizedElement="PHP_UML_748" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_754" name="bug-loseprocedural.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3546" client="PHP_UML_754" supplier="PHP_UML_758" utilizedElement="PHP_UML_758" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_764" name="bug-loseunknowntags.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3547" client="PHP_UML_764" supplier="PHP_UML_765" utilizedElement="PHP_UML_765" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3548" client="PHP_UML_764" supplier="PHP_UML_768" utilizedElement="PHP_UML_768" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_773" name="EMOF_test_sample.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3549" client="PHP_UML_773" supplier="PHP_UML_775" utilizedElement="PHP_UML_775" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3550" client="PHP_UML_773" supplier="PHP_UML_783" utilizedElement="PHP_UML_783" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3551" client="PHP_UML_773" supplier="PHP_UML_784" utilizedElement="PHP_UML_784" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3552" client="PHP_UML_773" supplier="PHP_UML_786" utilizedElement="PHP_UML_786" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3553" client="PHP_UML_773" supplier="PHP_UML_791" utilizedElement="PHP_UML_791" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3554" client="PHP_UML_773" supplier="PHP_UML_796" utilizedElement="PHP_UML_796" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3555" client="PHP_UML_773" supplier="PHP_UML_802" utilizedElement="PHP_UML_802" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3556" client="PHP_UML_773" supplier="PHP_UML_808" utilizedElement="PHP_UML_808" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3557" client="PHP_UML_773" supplier="PHP_UML_812" utilizedElement="PHP_UML_812" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_816" name="emptyns1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_822" name="emptyns2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_827" name="emptyns3.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3558" client="PHP_UML_827" supplier="PHP_UML_830" utilizedElement="PHP_UML_830" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_831" name="emptyns4.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_838" name="emptyns5.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3559" client="PHP_UML_838" supplier="PHP_UML_840" utilizedElement="PHP_UML_840" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_842" name="emptyns6.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3560" client="PHP_UML_842" supplier="PHP_UML_844" utilizedElement="PHP_UML_844" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_845" name="PHP_test_sample.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3561" client="PHP_UML_845" supplier="PHP_UML_846" utilizedElement="PHP_UML_846" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3562" client="PHP_UML_845" supplier="PHP_UML_853" utilizedElement="PHP_UML_853" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3563" client="PHP_UML_845" supplier="PHP_UML_857" utilizedElement="PHP_UML_857" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3564" client="PHP_UML_845" supplier="PHP_UML_859" utilizedElement="PHP_UML_859" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3565" client="PHP_UML_845" supplier="PHP_UML_898" utilizedElement="PHP_UML_898" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3566" client="PHP_UML_845" supplier="PHP_UML_917" utilizedElement="PHP_UML_917" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_928" name="PHP_UML_test_sample.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3567" client="PHP_UML_928" supplier="PHP_UML_929" utilizedElement="PHP_UML_929" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3568" client="PHP_UML_928" supplier="PHP_UML_944" utilizedElement="PHP_UML_944" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3569" client="PHP_UML_928" supplier="PHP_UML_1070" utilizedElement="PHP_UML_1070" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3570" client="PHP_UML_928" supplier="PHP_UML_1072" utilizedElement="PHP_UML_1072" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3571" client="PHP_UML_928" supplier="PHP_UML_1085" utilizedElement="PHP_UML_1085" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3572" client="PHP_UML_928" supplier="PHP_UML_1116" utilizedElement="PHP_UML_1116" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3573" client="PHP_UML_928" supplier="PHP_UML_1206" utilizedElement="PHP_UML_1206" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3574" client="PHP_UML_928" supplier="PHP_UML_1276" utilizedElement="PHP_UML_1276" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1458" name="test1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3575" client="PHP_UML_1458" supplier="PHP_UML_1460" utilizedElement="PHP_UML_1460" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1477" name="test2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3576" client="PHP_UML_1477" supplier="PHP_UML_1478" utilizedElement="PHP_UML_1478" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3577" client="PHP_UML_1477" supplier="PHP_UML_1483" utilizedElement="PHP_UML_1483" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1496" name="test3.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3578" client="PHP_UML_1496" supplier="PHP_UML_1498" utilizedElement="PHP_UML_1498" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3579" client="PHP_UML_1496" supplier="PHP_UML_1505" utilizedElement="PHP_UML_1505" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3580" client="PHP_UML_1496" supplier="PHP_UML_1510" utilizedElement="PHP_UML_1510" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3581" client="PHP_UML_1496" supplier="PHP_UML_1520" utilizedElement="PHP_UML_1520" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3582" client="PHP_UML_1496" supplier="PHP_UML_1523" utilizedElement="PHP_UML_1523" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3583" client="PHP_UML_1496" supplier="PHP_UML_1526" utilizedElement="PHP_UML_1526" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3584" client="PHP_UML_1496" supplier="PHP_UML_1529" utilizedElement="PHP_UML_1529" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3585" client="PHP_UML_1496" supplier="PHP_UML_1532" utilizedElement="PHP_UML_1532" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3586" client="PHP_UML_1496" supplier="PHP_UML_1541" utilizedElement="PHP_UML_1541" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1558" name="test4.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3587" client="PHP_UML_1558" supplier="PHP_UML_1559" utilizedElement="PHP_UML_1559" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1568" name="test5_cs.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3588" client="PHP_UML_1568" supplier="PHP_UML_1572" utilizedElement="PHP_UML_1572" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1607" name="test_implements.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3589" client="PHP_UML_1607" supplier="PHP_UML_1608" utilizedElement="PHP_UML_1608" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3590" client="PHP_UML_1607" supplier="PHP_UML_1612" utilizedElement="PHP_UML_1612" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3591" client="PHP_UML_1607" supplier="PHP_UML_1616" utilizedElement="PHP_UML_1616" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3592" client="PHP_UML_1607" supplier="PHP_UML_1624" utilizedElement="PHP_UML_1624" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1625" name="test_internal.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3593" client="PHP_UML_1625" supplier="PHP_UML_1627" utilizedElement="PHP_UML_1627" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1653" name="test_namespace1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3594" client="PHP_UML_1653" supplier="PHP_UML_1657" utilizedElement="PHP_UML_1657" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3595" client="PHP_UML_1653" supplier="PHP_UML_1658" utilizedElement="PHP_UML_1658" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3596" client="PHP_UML_1653" supplier="PHP_UML_1662" utilizedElement="PHP_UML_1662" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3597" client="PHP_UML_1653" supplier="PHP_UML_1663" utilizedElement="PHP_UML_1663" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3598" client="PHP_UML_1653" supplier="PHP_UML_1666" utilizedElement="PHP_UML_1666" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3599" client="PHP_UML_1653" supplier="PHP_UML_1671" utilizedElement="PHP_UML_1671" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3600" client="PHP_UML_1653" supplier="PHP_UML_1672" utilizedElement="PHP_UML_1672" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3601" client="PHP_UML_1653" supplier="PHP_UML_1674" utilizedElement="PHP_UML_1674" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3602" client="PHP_UML_1653" supplier="PHP_UML_1675" utilizedElement="PHP_UML_1675" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3603" client="PHP_UML_1653" supplier="PHP_UML_1680" utilizedElement="PHP_UML_1680" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3604" client="PHP_UML_1653" supplier="PHP_UML_1683" utilizedElement="PHP_UML_1683" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3605" client="PHP_UML_1653" supplier="PHP_UML_1684" utilizedElement="PHP_UML_1684" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1686" name="test_namespace2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3606" client="PHP_UML_1686" supplier="PHP_UML_1688" utilizedElement="PHP_UML_1688" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3607" client="PHP_UML_1686" supplier="PHP_UML_1690" utilizedElement="PHP_UML_1690" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1691" name="test_namespace3.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3608" client="PHP_UML_1691" supplier="PHP_UML_1694" utilizedElement="PHP_UML_1694" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3609" client="PHP_UML_1691" supplier="PHP_UML_1695" utilizedElement="PHP_UML_1695" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1697" name="test_non-strict-mode-features1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3610" client="PHP_UML_1697" supplier="PHP_UML_1700" utilizedElement="PHP_UML_1700" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3611" client="PHP_UML_1697" supplier="PHP_UML_1719" utilizedElement="PHP_UML_1719" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3612" client="PHP_UML_1697" supplier="PHP_UML_1720" utilizedElement="PHP_UML_1720" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3613" client="PHP_UML_1697" supplier="PHP_UML_1728" utilizedElement="PHP_UML_1728" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1738" name="test_non-strict-mode-features2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1754" name="test_only_api.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3614" client="PHP_UML_1754" supplier="PHP_UML_1755" utilizedElement="PHP_UML_1755" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3615" client="PHP_UML_1754" supplier="PHP_UML_1777" utilizedElement="PHP_UML_1777" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1783" name="test_use_namespace.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1784" name="test_use_namespace_lib1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3616" client="PHP_UML_1784" supplier="PHP_UML_1787" utilizedElement="PHP_UML_1787" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1791" name="test_use_namespace_lib2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3617" client="PHP_UML_1791" supplier="PHP_UML_1793" utilizedElement="PHP_UML_1793" name="source"/><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3618" client="PHP_UML_1791" supplier="PHP_UML_1794" utilizedElement="PHP_UML_1794" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="PHP_UML_1795" name="test_use_namespace_lib3.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="PHP_UML_3619" client="PHP_UML_1795" supplier="PHP_UML_1797" utilizedElement="PHP_UML_1797" name="source"/></packagedElement></packagedElement></uml:Model><php:docblock base_Element="PHP_UML_48"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_61"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_67"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_70"><see>function blah</see></php:docblock><php:docblock base_Element="PHP_UML_81"><package>PHP_UML::tests</package><subpackage>blah</subpackage><subpackage>blahblah</subpackage></php:docblock><php:docblock base_Element="PHP_UML_89"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_93"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_96"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_99"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_104"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_109"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_111"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_116"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_121"><package>PHP_UML::tests</package><subpackage>notparsed</subpackage></php:docblock><php:docblock base_Element="PHP_UML_127"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_130"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_134"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_137"><see>$broken</see></php:docblock><php:docblock base_Element="PHP_UML_141"><package>PHP_UML::tests</package><see>parserDocBlock, parserInclude, parserPage, parserClass, parserDefine, parserFunction, parserMethod, parserVar</see></php:docblock><php:docblock base_Element="PHP_UML_148"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_153"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_155"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_157"><var>array</var><see>Converter</see></php:docblock><php:docblock base_Element="PHP_UML_161"><var>array</var><see>Converter</see></php:docblock><php:docblock base_Element="PHP_UML_165"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_168"><see>$packageoutput</see><see>$parsePrivate</see></php:docblock><php:docblock base_Element="PHP_UML_172"><var>array</var><see>functionLink, pageLink, classLink, defineLink, methodLink, varLink</see></php:docblock><php:docblock base_Element="PHP_UML_176"><var>array</var><see>Converter::generateClassTreeFromClass()</see></php:docblock><php:docblock base_Element="PHP_UML_180"><var>array</var></php:docblock><php:docblock base_Element="PHP_UML_183"><see>setTargetDir()</see></php:docblock><php:docblock base_Element="PHP_UML_186"><var>array</var></php:docblock><php:docblock base_Element="PHP_UML_192"><see>Io</see><var>mixed</var></php:docblock><php:docblock base_Element="PHP_UML_196"><see>handleEvent(), handleDocBlock(), handlePage(), handleClass(), handleDefine(), handleFunction(), handleMethod(), handleVar(),</see></php:docblock><php:docblock base_Element="PHP_UML_199"><var>parserData</var><see>parserData</see></php:docblock><php:docblock base_Element="PHP_UML_203"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_206"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_209"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_213"><package>PHP_UML::tests</package><see>b553607_Parser</see></php:docblock><php:docblock base_Element="PHP_UML_217"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_219"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_222"><var>mixed</var></php:docblock><php:docblock base_Element="PHP_UML_226"><return>string returns value of {@link $type)</return></php:docblock><php:docblock base_Element="PHP_UML_229"><param>mixed set the value of this element</param></php:docblock><php:docblock base_Element="PHP_UML_233"><return>mixed get the value of this element (element-dependent)</return></php:docblock><php:docblock base_Element="PHP_UML_240"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_243"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_251"><package>PHP_UML::tests</package><subpackage>_test1</subpackage></php:docblock><php:docblock base_Element="PHP_UML_260"><package>PHP_UML::tests</package><subpackage>_test1</subpackage></php:docblock><php:docblock base_Element="PHP_UML_265"><package>PHP_UML::tests</package><subpackage>_test2</subpackage></php:docblock><php:docblock base_Element="PHP_UML_270"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_274"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_278"><access>public poopy</access><access>public</access><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_283"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_285"><var>string first var</var><var>class stupid second one</var></php:docblock><php:docblock base_Element="PHP_UML_288"><return>string first return</return><return>poopy second return</return></php:docblock><php:docblock base_Element="PHP_UML_293"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_306"><const>DEBUG_INFO wichtige Zusatz-Informationen</const></php:docblock><php:docblock base_Element="PHP_UML_308"><const>DEBUG_NOTICE Details, die nur selten angezeigt werden muessen</const></php:docblock><php:docblock base_Element="PHP_UML_311"><const>DEBUG_SQL alle Ausgaben, die (lange) SQL-Statements ausgeben</const></php:docblock><php:docblock base_Element="PHP_UML_313"><const>DEBUG_CTRACE zeigt Aufrufe (Init der Klassen) an</const></php:docblock><php:docblock base_Element="PHP_UML_315"><const>DEBUG_MTRACE zeigt Aufrufe von Methoden/Funktionen an</const></php:docblock><php:docblock base_Element="PHP_UML_317"><const>PHPDOCUMENTOR_DEBUG_ALL Alles anzeigen</const></php:docblock><php:docblock base_Element="PHP_UML_321"><access>private</access><var>integer $_bDebugLevel</var><see>$_ClubDebugOptions, setdebug(), _PHPDOCUMENTOR_DEBUG()</see></php:docblock><php:docblock base_Element="PHP_UML_327"><brother>_bDebugLevel</brother><access>private</access><var>boolean $_bHideDebug</var></php:docblock><php:docblock base_Element="PHP_UML_332"><brother>_bDebugLevel</brother><access>private</access><var>string $_sLogFile</var></php:docblock><php:docblock base_Element="PHP_UML_337"><brother>_bDebugLevel</brother><access>private</access><var>boolean $_bPrintDebug</var></php:docblock><php:docblock base_Element="PHP_UML_343"><access>public</access></php:docblock><php:docblock base_Element="PHP_UML_347"><access>public</access><param>string $property Name der Eigenschaft/Schluessel</param><param>string $target Name des Targets</param><return>mixed Wert der Eigenschaft/Schluessels</return><see>getProperty(), getAllProperties(), setProperty(), getPropType()</see></php:docblock><php:docblock base_Element="PHP_UML_359"><access>public</access><param>array $exclude diese Eigenschaften werden ignoriert</param><return>array Array mit den Namen der Eigenschaften als Schluesseln</return><see>getProperty(), getAllProperties(), setProperty(), getPropType()</see></php:docblock><php:docblock base_Element="PHP_UML_368"><brother>getProperty()</brother><access>public</access><param>mixed $value Wert der der Eigenschaft zugewiesen werden soll</param><return>mixed true im Erfolgsfall, sonst Fehler</return></php:docblock><php:docblock base_Element="PHP_UML_380"><access>public</access><brother>getProperty()</brother><return>string Datentyp der Eigenschaft</return></php:docblock><php:docblock base_Element="PHP_UML_389"><access>public</access><param>integer $level Level, bis zu dem Debugausgaben angezeigt werden</param><param>boolean $hide Sollen Debugausgaben im HTML in Kommentare gepackt werden?</param><param>string $file Soll in eine Datei geschrieben werden (null = nein)</param><param>boolean $print Sollen Kommentare in HTML geschrieben werden,</param><global>array Globale Debugging-Einstellungen</global><see>$_bDebugLevel, $_bHideDebug, $_sLogFile, $_bPrintDebug</see><see>$_ClubDebugOptions, ClubBase::set_debug(), ClubBase::_PHPDOCUMENTOR_DEBUG()</see></php:docblock><php:docblock base_Element="PHP_UML_418"><access>public</access><param>string $message Meldungstext</param><param>integer $level das Debuglevel der Meldung</param><global>array Globale Debugging-Einstellungen</global><see>$_bDebugLevel, $_bHideDebug, $_sLogFile, $_bPrintDebug</see><see>$_ClubDebugOptions, ClubBase::set_debug(), ClubBase::_PHPDOCUMENTOR_DEBUG()</see></php:docblock><php:docblock base_Element="PHP_UML_430"><access>public</access></php:docblock><php:docblock base_Element="PHP_UML_445"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_454"><see>a::$a</see><see>a::d()</see></php:docblock><php:docblock base_Element="PHP_UML_465"><param>integer testing</param><see>a::$a</see><see>a::a()</see></php:docblock><php:docblock base_Element="PHP_UML_474"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_477"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_480"><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_484"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_490"><access>private</access><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_502"><version>$Id: Bootstrap.php 3548 2009-12-21 16:21:30Z robert $</version><license>http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License, version 3 or later</license></php:docblock><php:docblock base_Element="PHP_UML_512"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_515"><var>boolean</var></php:docblock><php:docblock base_Element="PHP_UML_518"><var>\F3\FLOW3\Configuration\Manager</var></php:docblock><php:docblock base_Element="PHP_UML_520"><var>\F3\FLOW3\Object\ManagerInterface</var></php:docblock><php:docblock base_Element="PHP_UML_522"><var>\F3\FLOW3\Object\FactoryInterface</var></php:docblock><php:docblock base_Element="PHP_UML_524"><var>\F3\FLOW3\Package\ManagerInterface</var></php:docblock><php:docblock base_Element="PHP_UML_526"><var>\F3\FLOW3\Package\Package</var></php:docblock><php:docblock base_Element="PHP_UML_529"><var>\F3\FLOW3\Resource\ClassLoader</var></php:docblock><php:docblock base_Element="PHP_UML_531"><var>\F3\FLOW3\Reflection\Service</var></php:docblock><php:docblock base_Element="PHP_UML_533"><var>\F3\FLOW3\SignalSlot\Dispatcher</var></php:docblock><php:docblock base_Element="PHP_UML_535"><var>\F3\FLOW3\Error\ExceptionHandlerInterface</var></php:docblock><php:docblock base_Element="PHP_UML_537"><var>\F3\FLOW3\Log\SystemLoggerInterface</var></php:docblock><php:docblock base_Element="PHP_UML_539"><var>\F3\FLOW3\Configuration\Container</var></php:docblock><php:docblock base_Element="PHP_UML_542"><return>void</return></php:docblock><php:docblock base_Element="PHP_UML_546"><return>void</return></php:docblock><php:docblock base_Element="PHP_UML_557"><param>string $context The application context</param><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_565"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>run()</see><throws>\F3\FLOW3\Exception if the framework has already been initialized.</throws></php:docblock><php:docblock base_Element="PHP_UML_573"><return>void</return><author>Karsten Dambekalns &lt;karsten@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_579"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_585"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_591"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_597"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_602"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_608"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_614"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>intialize()</see></php:docblock><php:docblock base_Element="PHP_UML_620"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_626"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_632"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_641"><return>void</return><author>Karsten Dambekalns &lt;karsten@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_649"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_655"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_661"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_667"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>intialize()</see></php:docblock><php:docblock base_Element="PHP_UML_673"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><author>Andreas Förthner &lt;andreas.foerthner@netlogix.de&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_679"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_685"><return>void</return><author>Karsten Dambekalns &lt;karsten@typo3.org&gt;</author><see>initialize()</see></php:docblock><php:docblock base_Element="PHP_UML_691"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_697"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>run()</see></php:docblock><php:docblock base_Element="PHP_UML_705"><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author></php:docblock><php:docblock base_Element="PHP_UML_710"><param>\F3\FLOW3\Package\PackageInterface $package The package</param><param>array $packageConfiguration The configuration to evaluate</param><return>void</return><author>Robert Lemke &lt;robert@typo3.org&gt;</author><see>initializePackages()</see><todo>needs refactoring and be moved to elsewhere (package manager)</todo></php:docblock><php:docblock base_Element="PHP_UML_758"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_765"><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_768"><foobar>this is silly</foobar><author>this tag is parsed</author><package>PHP_UML::tests</package></php:docblock><php:docblock base_Element="PHP_UML_775"><category>PHP</category><package>PHP_UML::tests::Metamodel</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3s</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="PHP_UML_846"><category>PHP</category><package>PHP_UML::tests</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="PHP_UML_863"><param>PHP_UML_Metamodel_NamedElement &amp;$element Program element</param></php:docblock><php:docblock base_Element="PHP_UML_868"><param>int $index Index position</param><return>PHP_UML_Metamodel_NamedElement</return></php:docblock><php:docblock base_Element="PHP_UML_874"><return>array()</return></php:docblock><php:docblock base_Element="PHP_UML_878"><param>mixed $value The asserted value</param><param>string $property The property to look into</param><return>mixed Either the index position, or FALSE</return></php:docblock><php:docblock base_Element="PHP_UML_886"><return>PHP_UML_Metamodel_NamedElement</return></php:docblock><php:docblock base_Element="PHP_UML_890"><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_894"><return>PHP_UML_Metamodel_SequenceIterator</return></php:docblock><php:docblock base_Element="PHP_UML_930"><var>array</var></php:docblock><php:docblock base_Element="PHP_UML_933"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_936"><param>string $dir Path folder to look into</param><param>int $level Level of recursion</param><return>void</return></php:docblock><php:docblock base_Element="PHP_UML_949"><var>Array</var></php:docblock><php:docblock base_Element="PHP_UML_952"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_955"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_958"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_961"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_964"><var>bool</var></php:docblock><php:docblock base_Element="PHP_UML_967"><var>PHP_UML_Metamodel_Superstructure</var></php:docblock><php:docblock base_Element="PHP_UML_970"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_973"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_976"><var>PHP_UML_PHP_Parser</var></php:docblock><php:docblock base_Element="PHP_UML_979"><var>PHP_UML_XMI_Factory</var></php:docblock><php:docblock base_Element="PHP_UML_982"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_985"><var>array</var></php:docblock><php:docblock base_Element="PHP_UML_988"><var>int</var></php:docblock><php:docblock base_Element="PHP_UML_993"><param>mixed $filename File(s) to parse. Can be a single file,</param><param>string $model Name of the model placed at root (enclosing pkg)</param></php:docblock><php:docblock base_Element="PHP_UML_1000"><param>mixed $path Path(s) of the directories. Can be a single path,</param><param>string $model Name of the model placed at root (enclosing pkg)</param></php:docblock><php:docblock base_Element="PHP_UML_1007"><param>float $version XMI Version For XMI 1.x, any value below 2.</param><param>string $xmlEncoding XML Encoding</param></php:docblock><php:docblock base_Element="PHP_UML_1014"><param>string $output_file Filename</param></php:docblock><php:docblock base_Element="PHP_UML_1019"><param>string $output_file Filename</param></php:docblock><php:docblock base_Element="PHP_UML_1024"><param>string $name Must be &quot;XMI&quot; or &quot;parsed&quot;</param><return>string The XMI code, or a PHP_UML_Parser_Result object</return></php:docblock><php:docblock base_Element="PHP_UML_1030"><param>int $level Level of recursion in the sub-directories</param><param>string $pathfile Current file path</param></php:docblock><php:docblock base_Element="PHP_UML_1037"><param>int $level Level of recursion</param><param>string $dir Name of folder</param></php:docblock><php:docblock base_Element="PHP_UML_1044"><param>int $level Level of recursion</param><param>string $dir Name of folder</param></php:docblock><php:docblock base_Element="PHP_UML_1051"><param>PHP_UML_Metamodel_Package $package New package to traverse</param><param>bool $stripTag Omit package XMI tag</param></php:docblock><php:docblock base_Element="PHP_UML_1058"><param>string $x Filename</param><return>string</return></php:docblock><php:docblock base_Element="PHP_UML_1064"><param>string $x Filename</param><return>string</return></php:docblock><php:docblock base_Element="PHP_UML_1074"><var>array</var></php:docblock><php:docblock base_Element="PHP_UML_1077"><param>string $message The warning message to add</param></php:docblock><php:docblock base_Element="PHP_UML_1091"><param>string $filename The file name</param><return>string The PHP_UML ID of the matching extension</return></php:docblock><php:docblock base_Element="PHP_UML_1104"><param>array &amp;$obj Visited files</param><return>string XMI</return></php:docblock><php:docblock base_Element="PHP_UML_1110"><param>int $version XMI version</param><return>PHP_UML_XMI_Factory</return></php:docblock><php:docblock base_Element="PHP_UML_1121"><param>string &amp;$model Name of the model (root package)</param></php:docblock><php:docblock base_Element="PHP_UML_1126"><param>PHP_UML_Package &amp;$package Package</param></php:docblock><php:docblock base_Element="PHP_UML_1134"><param>PHP_UML_Type &amp;$type Datatype</param></php:docblock><php:docblock base_Element="PHP_UML_1158"><param>PHP_UML_TypedElement &amp;$parameter Parameter to split</param><param>int $id Id of tag Expression</param></php:docblock><php:docblock base_Element="PHP_UML_1176"><param>array $files_list List of files to map to artifacts</param><param>string $package Package to retrieve (for ID generation)</param><return>string XMI Code</return></php:docblock><php:docblock base_Element="PHP_UML_1184"><param>string $name Name of the subsystem</param><param>string $id Identifier (optional)</param><return>string XMI Code</return></php:docblock><php:docblock base_Element="PHP_UML_1194"><param>string $name Name of the component.</param><param>string $id Identifier (optional)</param><param>string $stereotype Stereotype</param><return>string XMI code</return></php:docblock><php:docblock base_Element="PHP_UML_1211"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_1272"><return>string</return></php:docblock><php:docblock base_Element="PHP_UML_1283"><var>PHP_UML_Metamodel_Superstructure</var></php:docblock><php:docblock base_Element="PHP_UML_1292"><param>string $root Root package name</param><param>bool $docblocks True = docblocks are scanned</param><param>bool $dollar True = $ in variables is kept</param></php:docblock><php:docblock base_Element="PHP_UML_1301"><param>string $filename File to parse</param></php:docblock><php:docblock base_Element="PHP_UML_1309"><param>string $name Name of the package</param><param>int $baseIdx Current nesting package index</param><return>int Index of the newly created package (or of the existing one)</return></php:docblock><php:docblock base_Element="PHP_UML_1317"><param>string $classDocblock Preceding code (before the class declaration)</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1323"><param>string $name Interface name</param><param>array $attr Some interface attributes (superclasses)</param><param>int $classPkgIndex The index of the current nesting package</param></php:docblock><php:docblock base_Element="PHP_UML_1332"><param>string $name Class name</param><param>array $attr Some class attributes (superclasses)</param><param>int $classPkgIndex The index of the current nesting package</param></php:docblock><php:docblock base_Element="PHP_UML_1371"><param>string &amp;$text Content of file</param><param>array &amp;$set Preg result</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1391"><param>string $text The text to search in (from the end)</param><return>string</return></php:docblock><php:docblock base_Element="PHP_UML_1397"><param>string $text Text</param><return>array</return></php:docblock><php:docblock base_Element="PHP_UML_1408"><param>string $parameter The parameter to analyse</param><param>string $default Default value</param><param>string $param Value of docblock &quot;param&quot;</param><return>array</return></php:docblock><php:docblock base_Element="PHP_UML_1427"><param>string $value The type to check</param><return>string The corresponding XMI DataType.</return></php:docblock><php:docblock base_Element="PHP_UML_1433"><param>PHP_UML_Metamodel_Package &amp;$ns Package to look into</param><param>PHP_UML_Metamodel_Package &amp;$_oDef Root package</param></php:docblock><php:docblock base_Element="PHP_UML_1447"><param>PHP_UML_Metamodel_Package &amp;$pkg The nesting package</param><param>string &amp;$element The element to resolve, provided as a name</param><param>PHP_UML_Metamodel_Package &amp;$_pkgDef The root package</param><param>PHP_UML_Metamodel_Type &amp;$context The context (the nesting class/interface, which</param></php:docblock><php:docblock base_Element="PHP_UML_1460"><package>Orion</package><author>Baptiste Autin</author></php:docblock><php:docblock base_Element="PHP_UML_1470"><param>string $str Accessor for fooPrivate</param></php:docblock><php:docblock base_Element="PHP_UML_1474"><return>string Value of fooPrivate</return></php:docblock><php:docblock base_Element="PHP_UML_1483"><package>Orion</package><author>Baptiste Autin</author></php:docblock><php:docblock base_Element="PHP_UML_1488"><param>string $name Name</param><param>int $age Age (that one is by reference !)</param><return>array</return></php:docblock><php:docblock base_Element="PHP_UML_1498"><package>Andromedia</package></php:docblock><php:docblock base_Element="PHP_UML_1511"><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1550"><param>float $x</param><param>float $y</param><return>float</return></php:docblock><php:docblock base_Element="PHP_UML_1559"><package>Cassiopeia</package></php:docblock><php:docblock base_Element="PHP_UML_1563"><param>Universe $object</param><return>Planet</return></php:docblock><php:docblock base_Element="PHP_UML_1572"><category>CategoryName</category><package>PackageName</package><author>Original Author &lt;author@example.com&gt;</author><author>Another Author &lt;another@example.com&gt;</author><copyright>1997-2005 The PHP Group</copyright><license>http://www.php.net/license/3_0.txt PHP License 3.0</license><version>Release: @package_version@</version><link>http://pear.php.net/package/PackageName</link><see>NetOther, Net_Sample::Net_Sample()</see><since>Class available since Release 1.2.0</since><deprecated>Class deprecated in Release 2.0.0</deprecated></php:docblock><php:docblock base_Element="PHP_UML_1585"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_1588"><var>bool</var><access>private</access></php:docblock><php:docblock base_Element="PHP_UML_1592"><access>tags are mandatory.  The @throws tag is required if the</access><param>string $arg1 the string to quote</param><param>int $arg2 an integer of how many problems happened.</param><return>int the integer of the set mode used. FALSE if foo</return><throws>exceptionclass [description]</throws><access>public</access><see>Net_Sample::$foo, Net_Other::someMethod()</see><since>Method available since Release 1.2.0</since><deprecated>Method deprecated in Release 2.0.0</deprecated></php:docblock><php:docblock base_Element="PHP_UML_1627"><package>MilkyWay</package></php:docblock><php:docblock base_Element="PHP_UML_1630"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_1632"><param>mixed $object</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1638"><param>mixed $object</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1645"><author>Admin</author><package>MilkyWay</package></php:docblock><php:docblock base_Element="PHP_UML_1714"><package>Baratin</package></php:docblock><php:docblock base_Element="PHP_UML_1735"><package>Baratin</package></php:docblock><php:docblock base_Element="PHP_UML_1755"><package>MilkyWay</package></php:docblock><php:docblock base_Element="PHP_UML_1759"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_1762"><var>string</var></php:docblock><php:docblock base_Element="PHP_UML_1764"><param>mixed $object</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1770"><param>mixed $object</param><return>int</return></php:docblock><php:docblock base_Element="PHP_UML_1777"><author>Admin</author><package>MilkyWay</package></php:docblock></xmi:XMI>