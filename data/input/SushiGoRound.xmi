<?xml version="1.0" encoding="UTF-8"?>
<XMI verified="false" xmi.version="1.2" timestamp="2013-03-07T05:40:30" xmlns:UML="http://schema.omg.org/spec/UML/1.3">
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.6.1</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.version="1.3" href="UML.xml" xmi.name="UML"/>
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isAbstract="false" isLeaf="false" xmi.id="m1" isRoot="false" name="UML Model">
   <UML:Namespace.ownedElement>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="folder" name="folder"/>
    <UML:Stereotype visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="datatype" name="datatype"/>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Logical View" name="Logical View">
     <UML:Namespace.ownedElement>
      <UML:Package stereotype="folder" visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Datatypes" name="Datatypes">
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="5HVw3mKmEHX1" name="int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bLnJDYt1Y0k1" name="char"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="V798JNzPdULe" name="bool"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EdPSswRRHFiU" name="float"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="lcVJcDI8KREe" name="double"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="nD1OfK0sxPKn" name="short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="LmEdzw5kYZ19" name="long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mJH5iThTfipI" name="unsigned int"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="2qAxFVkbFwCE" name="unsigned short"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="qFwNmvWZCncs" name="unsigned long"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="EJMt1BC1zMyF" name="string"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ZM3oZK8sjncW" name="array"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="divrFsq7eL4z" name="tuple"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ScvQHYQosRdR" name="dict"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mlITXs0Aav1p" name="object"/>
        <UML:DataType stereotype="datatype" visibility="public" isSpecification="false" namespace="Datatypes" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="npxR8zPYZIyp" name="set"/>
       </UML:Namespace.ownedElement>
      </UML:Package>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="pgo4cyGSDApy" name="sushi">
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="truUoj23Ug2L" type="I1fqwgeiTZ7b" name="contents"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bOQblOoY4cde" name="make">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="JPfjpr8OGYzz" type="pgo4cyGSDApy"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ar6l2wj5FEJM" name="order">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="ulXwN8av0ff0" type="pgo4cyGSDApy"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="oOOJ4RcvU8YD" name="identify">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Xmh4r3QgSoxU" type="pgo4cyGSDApy"/>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="DF9O96SrpnZo" type="5HVw3mKmEHX1" value="" name="colorcode"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="I1fqwgeiTZ7b" name="ingredient">
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="juuQbFp8DYrF" type="EdPSswRRHFiU" name="cost"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="qgKrvX5grMKd" type="nD1OfK0sxPKn" name="quantity"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="rcTKAkXxBIjy" name="buy">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="513txxbaU2db" type="I1fqwgeiTZ7b"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="QehfMkZqewAv" name="client">
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="fHm3MFiL5mCe" type="pgo4cyGSDApy" name="order"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="leAn1S85JKo6" type="5HVw3mKmEHX1" name="mood"/>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="eQXGoyCQ6T51" type="V798JNzPdULe" initialValue="True" name="isWait"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="wOM8kKdUwnHx" name="come">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="wZBJxRLeLF4w" type="QehfMkZqewAv"/>
          <UML:Parameter visibility="private" isSpecification="false" xmi.id="2kS9DX87uUGc" type="pgo4cyGSDApy" value="" name="order"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="FN3WirbKF6Y3" name="leave">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="Tr2gPuuEYE5S" type="QehfMkZqewAv"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mr6jfLesjhNR" name="eat"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Wyjl4Ip62FDE" name="angry"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="mLJeoZHYPNF2" name="soft"/>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="bh2ogpR3qUQE" name="telephone">
       <UML:Classifier.feature>
        <UML:Attribute visibility="private" isSpecification="false" xmi.id="bujsPWh1Bhnr" type="ed0gAP4jInch" name="menu"/>
        <UML:Operation visibility="public" isSpecification="false" isQuery="false" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="JHiVzTKUhFpO" name="order">
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="XNESKzlyakcl" type="I1fqwgeiTZ7b"/>
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="XEuLgIaswwlJ" name="new_class"/>
      <UML:Class visibility="public" isSpecification="false" namespace="Logical View" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="ed0gAP4jInch" name="cord"/>
     </UML:Namespace.ownedElement>
     <XMI.extension xmi.extender="umbrello">
      <diagrams>
       <diagram showopsig="1" linecolor="#ff0000" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="1" textcolor="#000000" isopen="1" showpackage="1" showpubliconly="0" showstereotype="1" name="class diagram" font="Sans Serif,9,-1,0,50,0,0,0,0,0" canvasheight="428" canvaswidth="756" localid="-1" snapcsgrid="0" showgrid="0" showops="1" griddotcolor="#808080" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="q07jVVN8dEEs" documentation="" showscope="1" snapgrid="0" showatts="1" type="1">
        <widgets>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="151" showattsigs="601" showstereotype="1" y="112" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" width="208" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="pgo4cyGSDApy" showscope="1" height="80" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="517" showattsigs="601" showstereotype="1" y="164" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" width="130" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="I1fqwgeiTZ7b" showscope="1" height="95" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="167" showattsigs="601" showstereotype="1" y="249" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" width="187" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="QehfMkZqewAv" showscope="1" height="126" showopsigs="601"/>
         <classwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="0" showoperations="1" textcolor="#000000" usesdiagramusefillcolor="0" showpubliconly="0" showpackage="1" x="506" showattsigs="601" showstereotype="1" y="327" showattributes="1" font="Sans Serif,9,-1,5,75,0,0,0,0,0" width="140" isinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="bh2ogpR3qUQE" showscope="1" height="42" showopsigs="601"/>
        </widgets>
        <messages/>
        <associations>
         <assocwidget indexa="1" linecolor="none" indexb="1" usesdiagramfillcolor="0" widgetbid="I1fqwgeiTZ7b" linewidth="none" textcolor="none" usesdiagramusefillcolor="1" totalcounta="2" totalcountb="2" widgetaid="pgo4cyGSDApy" visibilityA="1" visibilityB="1" usefillcolor="0" fillcolor="#000000" changeabilityA="900" xmi.id="truUoj23Ug2L" changeabilityB="900" type="510">
          <linepath>
           <startpoint startx="359" starty="168"/>
           <endpoint endx="517" endy="168"/>
          </linepath>
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" textcolor="none" usesdiagramusefillcolor="1" x="455" showstereotype="1" y="170" text="contents" font="Sans Serif,9,-1,0,50,0,0,0,0,0" pretext="-" role="710" width="64" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="0r6rZedRDVM5" height="18"/>
         </assocwidget>
         <assocwidget indexa="1" linecolor="none" indexb="1" usesdiagramfillcolor="0" widgetbid="pgo4cyGSDApy" linewidth="none" textcolor="none" usesdiagramusefillcolor="0" totalcounta="2" totalcountb="2" widgetaid="QehfMkZqewAv" visibilityA="1" visibilityB="1" usefillcolor="0" fillcolor="#000000" changeabilityA="900" xmi.id="fHm3MFiL5mCe" changeabilityB="900" type="510">
          <linepath>
           <startpoint startx="167" starty="249"/>
           <endpoint endx="167" endy="192"/>
          </linepath>
          <floatingtext linecolor="none" usesdiagramfillcolor="1" linewidth="none" textcolor="none" usesdiagramusefillcolor="1" x="125" showstereotype="1" y="194" text="order" font="Sans Serif,9,-1,0,50,0,0,0,0,0" pretext="-" role="710" width="44" isinstance="0" posttext="" usefillcolor="1" fillcolor="none" xmi.id="cAJhwTJLEMxV" height="32"/>
         </assocwidget>
        </associations>
       </diagram>
       <diagram showopsig="1" linecolor="#ff0000" snapx="10" showattribassocs="1" snapy="10" linewidth="0" showattsig="1" textcolor="#000000" isopen="1" showpackage="1" showpubliconly="1" showstereotype="1" name="sequence diagram" font="Ubuntu,9,-1,5,50,0,0,0,0,0" canvasheight="428" canvaswidth="756" localid="KMgiO4VKJXnp" snapcsgrid="0" showgrid="0" showops="1" griddotcolor="#808080" backgroundcolor="#ffffff" usefillcolor="1" fillcolor="#ffff00" zoom="100" xmi.id="l86aUODOyPhv" documentation="" showscope="1" snapgrid="0" showatts="1" type="3">
        <widgets>
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" textcolor="#000000" usesdiagramusefillcolor="1" x="80" decon="0" showstereotype="1" y="48" font="Ubuntu,9,-1,5,50,0,1,0,0,0" localid="o2X9GZ3jQ4Nn" width="50" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="QehfMkZqewAv" height="32" drawasactor="0"/>
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" textcolor="#000000" usesdiagramusefillcolor="1" x="322" decon="0" showstereotype="1" y="48" font="Ubuntu,9,-1,5,50,0,1,0,0,0" localid="wH1UV6uFC0pf" width="75" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="I1fqwgeiTZ7b" height="32" drawasactor="0"/>
         <objectwidget linecolor="#ff0000" usesdiagramfillcolor="0" linewidth="none" textcolor="#000000" usesdiagramusefillcolor="1" x="208" decon="0" showstereotype="1" y="48" font="Ubuntu,9,-1,5,50,0,1,0,0,0" localid="KMgiO4VKJXnp" width="50" isinstance="0" multipleinstance="0" usefillcolor="1" fillcolor="#ffff00" xmi.id="pgo4cyGSDApy" height="32" drawasactor="0"/>
        </widgets>
        <messages/>
        <associations/>
       </diagram>
      </diagrams>
     </XMI.extension>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Use Case View" name="Use Case View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Component View" name="Component View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Deployment View" name="Deployment View">
     <UML:Namespace.ownedElement/>
    </UML:Model>
    <UML:Model stereotype="folder" visibility="public" isSpecification="false" namespace="m1" isAbstract="false" isLeaf="false" isRoot="false" xmi.id="Entity Relationship Model" name="Entity Relationship Model">
     <UML:Namespace.ownedElement/>
    </UML:Model>
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello">
  <docsettings viewid="q07jVVN8dEEs" uniqueid="XNESKzlyakcl" documentation="# -*- coding: utf-8 -*-&#xa;#import ImageGrab&#xa;import pyscreenshot as ImageGrab&#xa;import os&#xa;import time&#xa;import xaut&#xa;import ImageOps&#xa;from numpy import *&#xa;&#xa;# Screen coordinates&#xa;&quot;&quot;&quot; &#xa;All coordinates assume a&#xa;    screen resolution of 0x0&#xa;    Chrome windows half screen sized&#xa;    Bookmarks Toolbar disabled.&#xa;&#xa;    Screen 1&#xa;    + -&#xa;    - -&#xa;&#xa;me:&#xa;first day - 1120&#xa;            2480&#xa;            4370&#xa;&#xa;7SINS: press key_down 7 times&#xa;    x_pad   = 30&#xa;    y_pad   = 102&#xa;PANDEMIC:&#xa;    x_pad   = 34&#xa;    y_pad   = 397&#xa;PANDEMIC:&#xa;    x_pad   = 31&#xa;    y_pad   = 377&#xa;    openbox - decorate - opera half screen&#xa;PANDEMIC:&#xa;    x_pad   = 31&#xa;    y_pad   = 401&#xa;    openbox - decorate - opera half screen&#xa;# ---------------&quot;&quot;&quot;&#xa;x_pad   = 34&#xa;y_pad   = 397&#xa;box = (x_pad+1, y_pad+1, x_pad+640, y_pad+480)&#xa;maked   = 0&#xa;&#xa;# Sushi mechanics&#xa;# ------------------&#xa;sushi = dict(&#xa;    colorcode = {&#xa;        2103:           'onigiri', &#xa;        2747:           'caliroll',&#xa;        2110:           'gunkan',&#xa;        2078:           'salmonroll',&#xa;        2525:           'shrimpsushi',&#xa;        2326:           'unagiroll',&#xa;        2880:           'dragonroll',&#xa;        4016:           'combosushi'},&#xa;    name = {&#xa;        'onigiri':      'Onigiri',&#xa;        'caliroll':     'California Roll',&#xa;        'gunkan':       'Gunkan Maki',&#xa;        'salmonroll':   'Salmon Roll',&#xa;        'shrimpsushi':  'Shrimp Sushi',&#xa;        'unagiroll':    'Unagi Roll',&#xa;        'dragonroll':   'Dragon Roll',&#xa;        'combosushi':   'Combo Sushi'},&#xa;    recipe = {&#xa;        'onigiri':      dict(shrimp=0,  rice=2, nori=1, roe=0,  salmon=0,   unagi=0),&#xa;        'caliroll':     dict(shrimp=0,  rice=1, nori=1, roe=1,  salmon=0,   unagi=0), &#xa;        'gunkan':       dict(shrimp=0,  rice=1, nori=1, roe=2,  salmon=0,   unagi=0), &#xa;        'salmonroll':   dict(shrimp=0,  rice=1, nori=1, roe=0,  salmon=2,   unagi=0), &#xa;        'shrimpsushi':  dict(shrimp=2,  rice=1, nori=1, roe=0,  salmon=0,   unagi=0),&#xa;        'unagiroll':    dict(shrimp=0,  rice=1, nori=1, roe=0,  salmon=0,   unagi=2),  &#xa;        'dragonroll':   dict(shrimp=0,  rice=2, nori=1, roe=1,  salmon=0,   unagi=2),  &#xa;        'combosushi':   dict(shrimp=1,  rice=2, nori=1, roe=1,  salmon=1,   unagi=1)}&#xa;    )&#xa;&#xa;# Ingredient mechanics&#xa;# ------------------&#xa;foodOnHand =            dict(shrimp=5,  rice=10,nori=10,roe=10, salmon=5,   unagi=5)&#xa;&#xa;class cord:&#xa;    tel         = (564, 345)&#xa;    deliveryn   = (484, 293)&#xa;    t_topping   = (541, 273)&#xa;    t_rice      = (549, 292)&#xa;    t_exit      = (582, 336)&#xa;&#xa;cordbuy = dict(&#xa;    shrimp      =(497, 222),&#xa;    rice        =(534, 279),&#xa;    nori        =(500, 277),&#xa;    roe         =(568, 271),&#xa;    salmon      =(488, 335),&#xa;    unagi       =(572, 221))&#xa;&#xa;cordput = dict(&#xa;    shrimp      =(30, 330),&#xa;    rice        =(80, 330),&#xa;    nori        =(30, 380),&#xa;    roe         =(80, 380),&#xa;    salmon      =(30, 440),&#xa;    unagi       =(80, 440))&#xa;&#xa;clrnota = dict(&#xa;    shrimp      =(127, 102, 90),&#xa;    rice        =(127, 127, 127),&#xa;    nori        =(33,  30,  11),&#xa;    roe         =(127, 61,  0),&#xa;    salmon      =(127, 71,  47),&#xa;    unagi       =(103, 64,  12))&#xa;&#xa;seat    = (0, 7846, 6551, 11567, 11190, 8456, 8187)&#xa;seatb   = (0, 28, 129, 230, 331, 432, 533)&#xa;&#xa;def screenGrab():&#xa;    im = ImageGrab.grab(box)&#xa;    #im.save(os.getcwd() + '\\full_snap__' + str(int(time.time())) + '.bmp', 'BMP')&#xa;    return im&#xa;&#xa;# Get Seat&#xa;# ------------------&#xa;def gs(seat):&#xa;    box = (x_pad+1 + seatb[seat], y_pad+1 + 57, x_pad+1+seatb[seat] + 57, y_pad+1+57 + 20)&#xa;    im = ImageOps.grayscale(ImageGrab.grab(box))&#xa;    a = array(im.getcolors())&#xa;    a = a.sum()&#xa;    print a&#xa;    return a&#xa;&#xa;# Mouse Helpers&#xa;# ------------------&#xa;m = xaut.mouse()&#xa;&#xa;def mv(xy):&#xa;    m.move(x_pad+xy[0],y_pad+xy[1])&#xa;&#xa;def gc():&#xa;    print m.x()-x_pad,m.y()-y_pad&#xa;&#xa;def lc():&#xa;    m.click(1)&#xa;    #print &quot;Click@&quot;,m.x()-x_pad,m.y()-y_pad&#xa;&#xa;def mlt(xy,s=0.05):&#xa;    mv(xy)&#xa;    lc()&#xa;    if s > 0.9:&#xa;        clr()&#xa;    else:&#xa;        time.sleep(s)&#xa;&#xa;# &#xa;# ------------------&#xa;def make(f):&#xa;    global maked&#xa;&#xa;    print 'Making a {}'.format(sushi['name'][f])&#xa;    if not [k for k in foodOnHand if foodOnHand[k] &lt; sushi['recipe'][f][k]]:&#xa;        for k in foodOnHand:&#xa;            foodOnHand[k] -= sushi['recipe'][f][k]&#xa;        for i, j in sushi['recipe'][f].items():&#xa;            while j != 0:&#xa;                mlt(cordput[i])&#xa;                j -= 1&#xa;        mlt((150,330),1)    # fold&#xa;    else:&#xa;        print &quot;!!!UNABLE&quot;&#xa;&#xa;# &#xa;# ------------------  &#xa;def clr():&#xa;    mlt((84, 210),0)&#xa;    mlt((184, 210),0)&#xa;    mlt((287, 210),0)&#xa;    mlt((384, 210),0)&#xa;    mlt((483, 210),0)&#xa;    mlt((591, 210),.1)&#xa;    print 'Clear tables'&#xa;&#xa;# Check food&#xa;# ------------------  &#xa;def check():&#xa;    print foodOnHand.items()&#xa;    print 'check for cheap food'&#xa;    for i, j in foodOnHand.items():&#xa;        if i == 'rice' or i == 'nori' or i == 'roe':&#xa;            if j &lt;= 3:&#xa;                print '{} is low and needs to be replenished'.format(i)&#xa;                buy(i)&#xa;&#xa;    if maked > 5:&#xa;        print 'check for rich food'&#xa;        for i, j in foodOnHand.items():&#xa;            if i == 'shrimp' or i == 'salmon' or i == 'unagi':&#xa;                if j &lt;= 2:&#xa;                    print '{} is low and needs to be replenished'.format(i)&#xa;                    buy(i)&#xa;&#xa;# buy food&#xa;# ------------------  &#xa;def buy(f):&#xa;    mlt(cord.tel)&#xa;    if f != 'rice':&#xa;        mlt(cord.t_topping,.9)&#xa;    else:&#xa;        mlt(cord.t_rice,.9)&#xa;    s = ImageGrab.grab(box)&#xa;    if s.getpixel(cordbuy[f]) != clrnota[f]:&#xa;            print '{} is available (buy)'.format(f)&#xa;            mlt(cordbuy[f],.1)&#xa;            mlt(cord.deliveryn,2)&#xa;            if f == 'rice' or f == 'nori' or f == 'roe':&#xa;                foodOnHand[f] += 10&#xa;            else:&#xa;                foodOnHand[f] += 5&#xa;    else:&#xa;        print '{} is NOT available (discard)'.format(f)&#xa;        mlt(cord.t_exit,1)&#xa;order&#xa;# Check Orders&#xa;# ------------------  &#xa;def order(i):&#xa;    check()&#xa;    s = gs(i)&#xa;    if s != seat[i]:&#xa;        if sushi['colorcode'].has_key(s):&#xa;            print 'table {} is occupied and needs {}'.format(i, sushi['colorcode'][s])&#xa;            make(sushi['colorcode'][s])&#xa;        else:&#xa;            print 'sushi not found!\n sushi colorcode = {}'.format(s)&#xa;    else:&#xa;        print 'Table {} unoccupied'.format(i)&#xa;&#xa;# Check Orders&#xa;# ------------------  &#xa;def orders():&#xa;    clr()&#xa;    order(1)&#xa;    order(2)&#xa;    order(3)&#xa;&#xa;    clr()    &#xa;    order(4)&#xa;    order(5)&#xa;    order(6)&#xa;&#xa;# Game init&#xa;# ------------------&#xa;def init():&#xa;    foodOnHand = dict(shrimp=5,rice=10,nori=10,roe=10,salmon=5,unagi=5)&#xa;&#xa;    global maked&#xa;    maked = 0&#xa;    print 'Variables initiated'&#xa;&#xa;# &#xa;# ------------------&#xa;def nextround():&#xa;    for i in range(1, 18):&#xa;        print &quot;We're on iteration {}&quot;.format(i)&#xa;        orders()&#xa;&#xa;# Start game again&#xa;# ------------------&#xa;def sga():&#xa;    init()&#xa;    mlt((300,370),.1)&#xa;    mlt((320,430),.1)&#xa;    mlt((190,380),.1)&#xa;    mlt((310,370),.1)&#xa;    nextround()&#xa;&#xa;# Start game&#xa;# ------------------&#xa;def sg():&#xa;    mlt((300,200),.1)&#xa;    mlt((300,400),.1)&#xa;    mlt((300,400),.1)&#xa;    mlt((570,440),.1)&#xa;    mlt((330,380),.1)&#xa;    print 'Game started first time'&#xa;&#xa;    for day in range(1, 9):&#xa;        print &quot;We're on day {}&quot;.format(day)&#xa;        sga()&#xa;&#xa;# &#xa;# ------------------&#xa;if __name__ == '__main__':&#xa;    m.move_delay(100)&#xa;    m.down_delay(100)&#xa;"/>
  <listview>
   <listitem open="1" type="800" id="Views">
    <listitem open="1" type="821" id="Component View"/>
    <listitem open="1" type="827" id="Deployment View"/>
    <listitem open="1" type="836" id="Entity Relationship Model"/>
    <listitem open="1" type="801" id="Logical View">
     <listitem open="0" type="807" id="q07jVVN8dEEs" label="class diagram"/>
     <listitem open="0" type="813" id="QehfMkZqewAv">
      <listitem open="0" type="815" id="Wyjl4Ip62FDE"/>
      <listitem open="0" type="815" id="wOM8kKdUwnHx"/>
      <listitem open="0" type="815" id="mr6jfLesjhNR"/>
      <listitem open="0" type="814" id="eQXGoyCQ6T51"/>
      <listitem open="0" type="815" id="FN3WirbKF6Y3"/>
      <listitem open="0" type="814" id="leAn1S85JKo6"/>
      <listitem open="0" type="814" id="fHm3MFiL5mCe"/>
      <listitem open="0" type="815" id="mLJeoZHYPNF2"/>
     </listitem>
     <listitem open="1" type="813" id="ed0gAP4jInch"/>
     <listitem open="0" type="830" id="Datatypes">
      <listitem open="1" type="829" id="ZM3oZK8sjncW"/>
      <listitem open="1" type="829" id="V798JNzPdULe"/>
      <listitem open="1" type="829" id="bLnJDYt1Y0k1"/>
      <listitem open="1" type="829" id="ScvQHYQosRdR"/>
      <listitem open="1" type="829" id="lcVJcDI8KREe"/>
      <listitem open="1" type="829" id="EdPSswRRHFiU"/>
      <listitem open="1" type="829" id="5HVw3mKmEHX1"/>
      <listitem open="1" type="829" id="LmEdzw5kYZ19"/>
      <listitem open="1" type="829" id="mlITXs0Aav1p"/>
      <listitem open="1" type="829" id="npxR8zPYZIyp"/>
      <listitem open="1" type="829" id="nD1OfK0sxPKn"/>
      <listitem open="1" type="829" id="EJMt1BC1zMyF"/>
      <listitem open="1" type="829" id="divrFsq7eL4z"/>
      <listitem open="1" type="829" id="mJH5iThTfipI"/>
      <listitem open="1" type="829" id="qFwNmvWZCncs"/>
      <listitem open="1" type="829" id="2qAxFVkbFwCE"/>
     </listitem>
     <listitem open="0" type="813" id="I1fqwgeiTZ7b">
      <listitem open="1" type="815" id="rcTKAkXxBIjy"/>
      <listitem open="0" type="814" id="juuQbFp8DYrF"/>
      <listitem open="0" type="814" id="qgKrvX5grMKd"/>
     </listitem>
     <listitem open="1" type="813" id="XEuLgIaswwlJ"/>
     <listitem open="0" type="810" id="l86aUODOyPhv" label="sequence diagram"/>
     <listitem open="0" type="813" id="pgo4cyGSDApy">
      <listitem open="0" type="814" id="truUoj23Ug2L"/>
      <listitem open="0" type="815" id="oOOJ4RcvU8YD"/>
      <listitem open="0" type="815" id="bOQblOoY4cde"/>
      <listitem open="0" type="815" id="ar6l2wj5FEJM"/>
     </listitem>
     <listitem open="1" type="813" id="bh2ogpR3qUQE">
      <listitem open="0" type="814" id="bujsPWh1Bhnr"/>
      <listitem open="0" type="815" id="JHiVzTKUhFpO"/>
     </listitem>
    </listitem>
    <listitem open="1" type="802" id="Use Case View"/>
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Python"/>
  </codegeneration>
 </XMI.extensions>
</XMI>
